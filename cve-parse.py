from os import listdir
from os.path import isfile, join
import zipfile
import json
from cpe import CPE
import os


vFEED_DIR="/Users/joubin/Documents/Git/vFeed"
def load_dictionary():
    files = [f for f in listdir("nvd/") if isfile(join("nvd/", f))]
    files.sort()
    for file in files:
        archive = zipfile.ZipFile(join("nvd/", file), 'r')
        jsonfile = archive.open(archive.namelist()[0])
        cve_dict = json.loads(jsonfile.read())
        jsonfile.close()
    cve_dict = cve_dict['CVE_Items']
    return cve_dict

def print_ids(cve_dict):
    for i in cve_dict:
        print(get_id(i))

def get_id(cve_obj):
    return cve_obj['cve']['CVE_data_meta']['ID']

def get_cpe(cve):
    cpes = []
    for node in cve['configurations']['nodes']:
        if 'cpe' in node:
            for _cpe in node['cpe']:
                my_cpe = CPE(_cpe['cpe23Uri'])
                cpes.append(my_cpe)
    return cpes

def get_vendor(cve):
    cpes = get_cpe(cve)
    vendors = []
    for cpe in cpes:
        vendors.append(cpe.get_vendor())
    # vendors = list(set(vendors))
    return vendors

def is_operating_system(cve):
    for node in cve['configurations']['nodes']:
        if 'cpe' in node:
            for _cpe in node['cpe']:
                my_cpe = CPE(_cpe['cpe23Uri'])
                if my_cpe.is_operating_system():
                    return True
    return False


def vTool_run(cve_id):
    try:
        return str(json.loads(os.popen("cd "+vFEED_DIR+"; /usr/bin/python2.7 vfeedcli.py  --method get_wasc "+ cve_id).read())[0]['title'])
    except:
        return ''

if __name__ == '__main__':
    cve_dict = load_dictionary()
    for cve in cve_dict:
        if is_operating_system(cve):
            vendors = get_vendor(cve)
            for vendor in vendors:
                print(str(vendor[0]), get_id(cve), vTool_run(get_id(cve)))
            

