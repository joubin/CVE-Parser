{"Modified": "2016-09-26T10:59:04.180-04:00", "summary": "CRLF injection vulnerability in the Undertow web server in WildFly 10.0.0, as used in Red Hat JBoss Enterprise Application Platform (EAP) 7.x before 7.0.2, allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via unspecified vectors.", "vulnerable_configuration_cpe_2_2": ["cpe:/a:redhat:jboss_wildfly_application_server:10.0.0", "cpe:/a:redhat:jboss_enterprise_application_platform:7.0.1", "cpe:/o:redhat:enterprise_linux:7.0", "cpe:/o:redhat:enterprise_linux:6.0"], "last-modified": "2016-11-28T15:22:09.513-05:00", "references": ["http://rhn.redhat.com/errata/RHSA-2016-1838.html", "http://rhn.redhat.com/errata/RHSA-2016-1839.html", "http://rhn.redhat.com/errata/RHSA-2016-1840.html", "http://rhn.redhat.com/errata/RHSA-2016-1841.html", "http://www.securityfocus.com/bid/92894", "http://www.securitytracker.com/id/1036758", "https://bugzilla.redhat.com/show_bug.cgi?id=1344321"], "ranking": [[{"circl": 2}]], "cwe": "CWE-113", "cvss": "4.3", "capec": [{"related_weakness": ["565", "302", "311", "113", "539", "20", "315", "384", "472", "724", "602", "642"], "solutions": ["Design: Use input validation for cookies", "Design: Generate and validate MAC for cookies", "Implementation: Use SSL/TLS to protect cookie in transit", "Implementation: Ensure the web server implements all relevant security patches, many exploitable buffer overflows are fixed in patches issued for the software."], "id": "31", "prerequisites": ["Target server software must be a HTTP daemon that relies on cookies."], "summary": ["This attack relies on the use of HTTP Cookies to store credentials, state information and other critical data on client systems.", "The first form of this attack involves accessing HTTP Cookies to mine for potentially sensitive data contained therein.", "The second form of this attack involves intercepting this data as it is transmitted from client to server. This intercepted information is then used by the attacker to impersonate the remote user/session.", "The third form is when the cookie's content is modified by the attacker before it is sent back to the server. Here the attacker seeks to convince the target server to operate on this falsified information."], "name": "Accessing/Intercepting/Modifying HTTP Cookies"}, {"related_weakness": ["113", "697", "707", "713", "74"], "solutions": ["To avoid HTTP Response Splitting, the application must not rely on user-controllable input to form part of its output response stream. Specifically, response splitting occurs due to injection of CR-LF sequences and additional headers. All data arriving from the user and being used as part of HTTP response headers must be subjected to strict validation that performs simple character-based as well as semantic filtering to strip it of malicious character sequences and headers."], "id": "34", "prerequisites": ["User-controlled input used as part of HTTP header", "Ability of attacker to inject custom strings in HTTP header", "Insufficient input validation in application to check for input sanity before using it as part of response header"], "summary": ["This attack uses a maliciously-crafted HTTP request in order to cause a vulnerable web server to respond with an HTTP response stream that will be interpreted by the client as two separate responses instead of one. This is possible when user-controlled input is used unvalidated as part of the response headers. The target software, the client, will interpret the injected header as being a response to a second request, thereby causing the maliciously-crafted contents be displayed and possibly cached.", "To achieve HTTP Response Splitting on a vulnerable web server, the attacker:"], "name": "HTTP Response Splitting"}, {"related_weakness": ["79", "20", "184", "96", "113", "348", "116", "350", "86", "602", "692", "697", "713", "71"], "solutions": ["Design: Use browser technologies that do not allow client side scripting.", "Design: Utilize strict type, character, and encoding enforcement", "Design: Server side developers should not proxy content via XHR or other means, if a http proxy for remote content is setup on the server side, the client's browser has no way of discerning where the data is originating from.", "Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.", "Implementation: Perform input validation for all remote content.", "Implementation: Perform output validation for all remote content.", "Implementation: Session tokens for specific host", "Implementation: Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser, web servers, and plug in technologies, staying current on patch release that deal with XSS countermeasures mitigates this."], "id": "63", "prerequisites": ["Target client software must be a client that allows scripting communication from remote hosts, such as a JavaScript-enabled Web Browser"], "summary": ["An attacker embeds malicious scripts in content that will be served to web browsers. The goal of the attack is for the target software, the client-side browser, to execute the script with the users' privilege level.", "An attack of this type exploits a programs' vulnerabilities that are brought on by allowing remote hosts to execute code and scripts. Web browsers, for example, have some simple security controls in place, but if a remote attacker is allowed to execute scripts (through injecting them in to user-generated content like bulletin boards) then these controls may be bypassed. Further, these attacks are very difficult for an end user to detect."], "name": "Simple Script Injection"}, {"related_weakness": ["79", "113", "348", "96", "20", "116", "184", "86", "712", "692"], "solutions": ["Design: Use browser technologies that do not allow client side scripting.", "Design: Utilize strict type, character, and encoding enforcement", "Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.", "Implementation: Perform input validation for all remote content.", "Implementation: Perform output validation for all remote content.", "Implementation: Disable scripting languages such as JavaScript in browser", "Implementation: Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser, web servers, and plug in technologies, staying current on patch release that deal with XSS countermeasures mitigates this."], "id": "85", "prerequisites": ["The user must allow JavaScript to execute in their browser"], "summary": ["This attack utilizes the frequent client-server roundtrips in Ajax conversation to scan a system. While Ajax does not open up new vulnerabilities per se, it does optimize them from an attacker point of view. In many XSS attacks the attacker must get a \"hole in one\" and successfully exploit the vulnerability on the victim side the first time, once the client is redirected the attacker has many chances to engage in follow on probes, but there is only one first chance. In a widely used web application this is not a major problem because 1 in a 1,000 is good enough in a widely used application.", "A common first step for an attacker is to footprint the environment to understand what attacks will work. Since footprinting relies on enumeration, the conversational pattern of rapid, multiple requests and responses that are typical in Ajax applications enable an attacker to look for many vulnerabilities, well-known ports, network locations and so on."], "name": "AJAX Fingerprinting"}], "id": "CVE-2016-4993", "Published": "2016-09-26T10:59:03.117-04:00", "vulnerable_configuration": [{"title": "Red Hat JBoss WildFly Application Server 10.0.0", "id": "cpe:2.3:a:redhat:jboss_wildfly_application_server:10.0.0"}, {"title": "cpe:2.3:a:redhat:jboss_enterprise_application_platform:7.0.1", "id": "cpe:2.3:a:redhat:jboss_enterprise_application_platform:7.0.1"}, {"title": "Red Hat Enterprise Linux (RHEL) 7.0 (7)", "id": "cpe:2.3:o:redhat:enterprise_linux:7.0"}, {"title": "Redhat Enterprise Linux 6.0", "id": "cpe:2.3:o:redhat:enterprise_linux:6.0"}]}