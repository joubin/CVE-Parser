{"Modified": "2016-11-16T00:59:11.970-05:00", "summary": "Race condition in the environ_read function in fs/proc/base.c in the Linux kernel before 4.5.4 allows local users to obtain sensitive information from kernel memory by reading a /proc/*/environ file during a process-setup time interval in which environment-variable copying is incomplete.", "vulnerable_configuration_cpe_2_2": ["cpe:/o:linux:linux_kernel:4.5.3"], "last-modified": "2016-12-02T06:03:51.280-05:00", "references": ["http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=8148a73c9901a8794a50f950083c00ccf97d43b3", "http://source.android.com/security/bulletin/2016-11-01.html", "http://www.kernel.org/pub/linux/kernel/v4.x/ChangeLog-4.5.4", "http://www.securityfocus.com/bid/94138", "https://bugzilla.kernel.org/show_bug.cgi?id=116461", "https://forums.grsecurity.net/viewtopic.php?f=3&t=4363", "https://github.com/torvalds/linux/commit/8148a73c9901a8794a50f950083c00ccf97d43b3"], "ranking": [[{"circl": 2}]], "cwe": "CWE-362", "cvss": "4.7", "capec": [{"related_weakness": ["368", "363", "366", "370", "362", "662", "689", "667", "665"], "solutions": ["Use safe libraries to access resources such as files.", "Be aware that improper use of access function calls such as chown(), tempfile(), chmod(), etc. can cause a race condition.", "Use synchronization to control the flow of execution.", "Use static analysis tools to find race conditions.", "Pay attention to concurrency problems related to the access of resources."], "id": "26", "prerequisites": ["A resource is accessed/modified concurrently by multiple processes such that a race condition exists.", "The attacker has the ability to modify the resource."], "summary": ["This attack targets a race condition occurring when multiple processes access and manipulate the same resource concurrently and the outcome of the execution depends on the particular order in which the access takes place. The attacker can leverage a race condition by \"running the race\", modifying the resource and modifying the normal execution flow. For instance a race condition can occur while accessing a file, the attacker can trick the system by replacing the original file with his version and cause the system to read the malicious file."], "name": "Leveraging Race Conditions"}, {"related_weakness": ["367", "368", "366", "370", "362", "662", "691", "663", "665"], "solutions": ["Use safe libraries to access resources such as files.", "Be aware that improper use of access function calls such as chown(), tempfile(), chmod(), etc. can cause a race condition.", "Use synchronization to control the flow of execution.", "Use static analysis tools to find race conditions.", "Pay attention to concurrency problems related to the access of resources."], "id": "29", "prerequisites": ["A resource is access/modified concurrently by multiple processes.", "The attacker is able to modify resource.", "A race condition exists while accessing a resource."], "summary": ["This attack targets a race condition occurring between the time of check (state) for a resource and the time of use of a resource. The typical example is the file access. The attacker can leverage a file access race condition by \"running the race\", meaning that he would modify the resource between the first time the target program accesses the file and the time the target program uses the file. During that period of time, the attacker could do something such as replace the file and cause an escalation of privilege."], "name": "Leveraging Time-of-Check and Time-of-Use (TOCTOU) Race Conditions"}], "id": "CVE-2016-7916", "Published": "2016-11-16T00:59:11.017-05:00", "vulnerable_configuration": [{"title": "Linux Kernel 4.5.3", "id": "cpe:2.3:o:linux:linux_kernel:4.5.3"}]}