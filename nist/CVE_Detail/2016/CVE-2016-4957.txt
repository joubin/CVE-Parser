{"Modified": "2016-07-04T21:59:05.660-04:00", "vulnerable_configuration": [{"title": "Oracle Solaris 11.3", "id": "cpe:2.3:o:oracle:solaris:11.3"}, {"title": "Oracle Solaris 10", "id": "cpe:2.3:o:oracle:solaris:10"}, {"title": "Novell Leap 42.1", "id": "cpe:2.3:o:novell:leap:42.1"}, {"title": "Novell SUSE OpenStack Cloud 5", "id": "cpe:2.3:o:novell:suse_openstack_cloud:5"}, {"title": "cpe:2.3:o:novell:suse_linux_enterprise_debuginfo:11.0:sp3", "id": "cpe:2.3:o:novell:suse_linux_enterprise_debuginfo:11.0:sp3"}, {"title": "cpe:2.3:o:novell:suse_linux_enterprise_debuginfo:11.0:sp2", "id": "cpe:2.3:o:novell:suse_linux_enterprise_debuginfo:11.0:sp2"}, {"title": "Novell SUSE Linux Enterprise Server 11.0 Service Pack 3 Long Term Service Pack Support", "id": "cpe:2.3:o:novell:suse_linux_enterprise_server:11.0:sp3:-:-:ltss"}, {"title": "Novell SUSE Linux Enterprise Server 11.0 Service Pack 2 Long Term Service Pack Support", "id": "cpe:2.3:o:novell:suse_linux_enterprise_server:11.0:sp2:-:-:ltss"}, {"title": "Novell SUSE Manager 2.1", "id": "cpe:2.3:o:novell:suse_manager:2.1"}, {"title": "Novell SUSE Manager Proxy 2.1", "id": "cpe:2.3:o:novell:suse_manager_proxy:2.1"}, {"title": "Novell openSUSE 13.2", "id": "cpe:2.3:o:novell:opensuse:13.2"}, {"title": "cpe:2.3:o:novell:suse_linux_enterprise_server:11.0:sp4", "id": "cpe:2.3:o:novell:suse_linux_enterprise_server:11.0:sp4"}, {"title": "cpe:2.3:o:novell:suse_linux_enterprise_debuginfo:11.0:sp4", "id": "cpe:2.3:o:novell:suse_linux_enterprise_debuginfo:11.0:sp4"}, {"title": "Novell SUSE Linux Enterprise Server 12.0 Service Pack 1", "id": "cpe:2.3:o:novell:suse_linux_enterprise_server:12.0:sp1"}, {"title": "cpe:2.3:o:novell:suse_linux_enterprise_desktop:12.0:sp1", "id": "cpe:2.3:o:novell:suse_linux_enterprise_desktop:12.0:sp1"}, {"title": "NTP 4.2.8 Patch 7", "id": "cpe:2.3:a:ntp:ntp:4.2.8:p7"}, {"title": "NTP 4.2.8 Patch 6", "id": "cpe:2.3:a:ntp:ntp:4.2.8:p6"}, {"title": "NTP 4.2.8 Patch 5", "id": "cpe:2.3:a:ntp:ntp:4.2.8:p5"}, {"title": "NTP 4.2.8 Patch 4", "id": "cpe:2.3:a:ntp:ntp:4.2.8:p4"}, {"title": "NTP 4.2.8 Patch 3 Release Candidate 3", "id": "cpe:2.3:a:ntp:ntp:4.2.8:p3_rc3"}, {"title": "NTP 4.2.8 Patch 3 Release Candidate 2", "id": "cpe:2.3:a:ntp:ntp:4.2.8:p3_rc2"}, {"title": "NTP 4.2.8 Patch 3 Release Candidate 1", "id": "cpe:2.3:a:ntp:ntp:4.2.8:p3_rc1"}, {"title": "NTP 4.2.8 Patch 3", "id": "cpe:2.3:a:ntp:ntp:4.2.8:p3"}, {"title": "NTP 4.2.8 Patch 2 Release Candidate 3", "id": "cpe:2.3:a:ntp:ntp:4.2.8:p2_rc3"}, {"title": "NTP 4.2.8 Patch 2 Release Candidate 2", "id": "cpe:2.3:a:ntp:ntp:4.2.8:p2_rc2"}, {"title": "NTP 4.2.8 Patch 2 Release Candidate 1", "id": "cpe:2.3:a:ntp:ntp:4.2.8:p2_rc1"}, {"title": "NTP 4.2.8 Patch 2", "id": "cpe:2.3:a:ntp:ntp:4.2.8:p2"}, {"title": "NTP 4.2.8 Patch 1 Release Candidate 2", "id": "cpe:2.3:a:ntp:ntp:4.2.8:p1_rc2"}, {"title": "NTP 4.2.8 Patch 1 Release Candidate 1", "id": "cpe:2.3:a:ntp:ntp:4.2.8:p1_rc1"}, {"title": "NTP 4.2.8 Patch 1 Beta5", "id": "cpe:2.3:a:ntp:ntp:4.2.8:p1_beta5"}, {"title": "NTP 4.2.8 Patch 1 Beta 4", "id": "cpe:2.3:a:ntp:ntp:4.2.8:p1_beta4"}, {"title": "NTP 4.2.8 Patch 1 Beta 3", "id": "cpe:2.3:a:ntp:ntp:4.2.8:p1_beta3"}, {"title": "NTP 4.2.8 Patch 1 Beta 2", "id": "cpe:2.3:a:ntp:ntp:4.2.8:p1_beta2"}, {"title": "NTP 4.2.8 Patch 1 Beta 1", "id": "cpe:2.3:a:ntp:ntp:4.2.8:p1_beta1"}, {"title": "NTP 4.2.8 Patch 1", "id": "cpe:2.3:a:ntp:ntp:4.2.8:p1"}, {"title": "NTP NTP 4.2.8", "id": "cpe:2.3:a:ntp:ntp:4.2.8"}, {"title": "NTP NTP 4.2.7p444", "id": "cpe:2.3:a:ntp:ntp:4.2.7p444"}, {"title": "NTP 4.2.7 Patch 99", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p99"}, {"title": "NTP 4.2.7 Patch 98", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p98"}, {"title": "NTP 4.2.7 Patch 97", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p97"}, {"title": "NTP 4.2.7 Patch 96", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p96"}, {"title": "NTP 4.2.7 Patch 95", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p95"}, {"title": "NTP 4.2.7 Patch 94", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p94"}, {"title": "NTP 4.2.7 Patch 93", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p93"}, {"title": "NTP 4.2.7 Patch 92", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p92"}, {"title": "NTP 4.2.7 Patch 91", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p91"}, {"title": "NTP 4.2.7 Patch 90", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p90"}, {"title": "NTP 4.2.7 Patch 9", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p9"}, {"title": "NTP 4.2.7 Patch 89", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p89"}, {"title": "NTP 4.2.7 Patch 88", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p88"}, {"title": "NTP 4.2.7 Patch 87", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p87"}, {"title": "NTP 4.2.7 Patch 86", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p86"}, {"title": "NTP 4.2.7 Patch 85", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p85"}, {"title": "NTP 4.2.7 Patch 84", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p84"}, {"title": "NTP 4.2.7 Patch 83", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p83"}, {"title": "NTP 4.2.7 Patch 82", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p82"}, {"title": "NTP 4.2.7 Patch 81", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p81"}, {"title": "NTP 4.2.7 Patch 80", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p80"}, {"title": "NTP 4.2.7 Patch 8", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p8"}, {"title": "NTP 4.2.7 Patch 79", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p79"}, {"title": "NTP 4.2.7 Patch 78", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p78"}, {"title": "NTP 4.2.7 Patch 77", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p77"}, {"title": "NTP 4.2.7 Patch 76", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p76"}, {"title": "NTP 4.2.7 Patch 75", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p75"}, {"title": "NTP 4.2.7 Patch 74", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p74"}, {"title": "NTP 4.2.7 Patch 73", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p73"}, {"title": "NTP 4.2.7 Patch 72", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p72"}, {"title": "NTP 4.2.7 Patch 71", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p71"}, {"title": "NTP 4.2.7 Patch 70", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p70"}, {"title": "NTP 4.2.7 Patch 7", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p7"}, {"title": "NTP 4.2.7 Patch 69", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p69"}, {"title": "NTP 4.2.7 Patch 68", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p68"}, {"title": "NTP 4.2.7 Patch 67", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p67"}, {"title": "NTP 4.2.7 Patch 66", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p66"}, {"title": "NTP 4.2.7 Patch 65", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p65"}, {"title": "NTP 4.2.7 Patch 64", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p64"}, {"title": "NTP 4.2.7 Patch 63", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p63"}, {"title": "NTP 4.2.7 Patch 62", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p62"}, {"title": "NTP 4.2.7 Patch 61", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p61"}, {"title": "NTP 4.2.7 Patch 60", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p60"}, {"title": "NTP 4.2.7 Patch 6", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p6"}, {"title": "NTP 4.2.7 Patch 59", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p59"}, {"title": "NTP 4.2.7 Patch 58", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p58"}, {"title": "NTP 4.2.7 Patch 57", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p57"}, {"title": "NTP 4.2.7 Patch 56", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p56"}, {"title": "NTP 4.2.7 Patch 55", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p55"}, {"title": "NTP 4.2.7 Patch 54", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p54"}, {"title": "NTP 4.2.7 Patch 53", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p53"}, {"title": "NTP 4.2.7 Patch 52", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p52"}, {"title": "NTP 4.2.7 Patch 51", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p51"}, {"title": "NTP 4.2.7 Patch 50", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p50"}, {"title": "NTP 4.2.7 Patch 5", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p5"}, {"title": "NTP 4.2.7 Patch 49", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p49"}, {"title": "NTP 4.2.7 Patch 486 Release Candidate 1", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p486_rc1"}, {"title": "NTP 4.2.7 Patch 485 Release Candidate 1", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p485_rc1"}, {"title": "NTP 4.2.7 Patch 484 Release Candidate 1", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p484_rc1"}, {"title": "NTP 4.2.7 Patch 483", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p483"}, {"title": "NTP 4.2.7 Patch 482", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p482"}, {"title": "NTP 4.2.7 Patch 481", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p481"}, {"title": "NTP 4.2.7 Patch 480", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p480"}, {"title": "NTP 4.2.7 Patch 48", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p48"}, {"title": "NTP 4.2.7 Patch 479", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p479"}, {"title": "NTP 4.2.7 Patch 478", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p478"}, {"title": "NTP 4.2.7 Patch 477", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p477"}, {"title": "NTP 4.2.7 Patch 476", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p476"}, {"title": "NTP 4.2.7 Patch 475", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p475"}, {"title": "NTP 4.2.7 Patch 474", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p474"}, {"title": "NTP 4.2.7 Patch 473", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p473"}, {"title": "NTP 4.2.7 Patch 472", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p472"}, {"title": "NTP 4.2.7 Patch 471", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p471"}, {"title": "NTP 4.2.7 Patch 470", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p470"}, {"title": "NTP 4.2.7 Patch 47", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p47"}, {"title": "NTP 4.2.7 Patch 469", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p469"}, {"title": "NTP 4.2.7 Patch 468", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p468"}, {"title": "NTP 4.2.7 Patch 467", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p467"}, {"title": "NTP 4.2.7 Patch 466", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p466"}, {"title": "NTP 4.2.7 Patch 465", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p465"}, {"title": "NTP 4.2.7 Patch 464", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p464"}, {"title": "NTP 4.2.7 Patch 463", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p463"}, {"title": "NTP 4.2.7 Patch 462", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p462"}, {"title": "NTP 4.2.7 Patch 461", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p461"}, {"title": "NTP 4.2.7 Patch 460", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p460"}, {"title": "NTP 4.2.7 Patch 46", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p46"}, {"title": "NTP 4.2.7 Patch 459", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p459"}, {"title": "NTP 4.2.7 Patch 458", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p458"}, {"title": "NTP 4.2.7 Patch 457", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p457"}, {"title": "NTP 4.2.7 Patch 456", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p456"}, {"title": "NTP 4.2.7 Patch 455", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p455"}, {"title": "NTP 4.2.7 Patch 454", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p454"}, {"title": "NTP 4.2.7 Patch 453", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p453"}, {"title": "NTP 4.2.7 Patch 452", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p452"}, {"title": "NTP 4.2.7 Patch 451", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p451"}, {"title": "NTP 4.2.7 Patch 450", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p450"}, {"title": "NTP 4.2.7 Patch 45", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p45"}, {"title": "NTP 4.2.7 Patch 449", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p449"}, {"title": "NTP 4.2.7 Patch 448", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p448"}, {"title": "NTP 4.2.7 Patch 447", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p447"}, {"title": "NTP 4.2.7 Patch 446", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p446"}, {"title": "NTP 4.2.7 Patch 445", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p445"}, {"title": "NTP 4.2.7 Patch 444", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p444"}, {"title": "NTP 4.2.7 Patch 443", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p443"}, {"title": "NTP 4.2.7 Patch 442", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p442"}, {"title": "NTP 4.2.7 Patch 441", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p441"}, {"title": "NTP 4.2.7 Patch 440", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p440"}, {"title": "NTP 4.2.7 Patch 44", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p44"}, {"title": "NTP 4.2.7 Patch 439", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p439"}, {"title": "NTP 4.2.7 Patch 438", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p438"}, {"title": "NTP 4.2.7 Patch 437", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p437"}, {"title": "NTP 4.2.7 Patch 436", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p436"}, {"title": "NTP 4.2.7 Patch 435", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p435"}, {"title": "NTP 4.2.7 Patch 434", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p434"}, {"title": "NTP 4.2.7 Patch 433", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p433"}, {"title": "NTP 4.2.7 Patch 432", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p432"}, {"title": "NTP 4.2.7 Patch 431", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p431"}, {"title": "NTP 4.2.7 Patch 430", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p430"}, {"title": "NTP 4.2.7 Patch 43", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p43"}, {"title": "NTP 4.2.7 Patch 429", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p429"}, {"title": "NTP 4.2.7 Patch 428", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p428"}, {"title": "NTP 4.2.7 Patch 427", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p427"}, {"title": "NTP 4.2.7 Patch 426", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p426"}, {"title": "NTP 4.2.7 Patch 425", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p425"}, {"title": "NTP 4.2.7 Patch 424", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p424"}, {"title": "NTP 4.2.7 Patch 423", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p423"}, {"title": "NTP 4.2.7 Patch 422", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p422"}, {"title": "NTP 4.2.7 Patch 421", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p421"}, {"title": "NTP 4.2.7 Patch 420", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p420"}, {"title": "NTP 4.2.7 Patch 42", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p42"}, {"title": "NTP 4.2.7 Patch 419", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p419"}, {"title": "NTP 4.2.7 Patch 418", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p418"}, {"title": "NTP 4.2.7 Patch 417", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p417"}, {"title": "NTP 4.2.7 Patch 416", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p416"}, {"title": "NTP 4.2.7 Patch 415", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p415"}, {"title": "NTP 4.2.7 Patch 414", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p414"}, {"title": "NTP 4.2.7 Patch 413", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p413"}, {"title": "NTP 4.2.7 Patch 412", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p412"}, {"title": "NTP 4.2.7 Patch 411", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p411"}, {"title": "NTP 4.2.7 Patch 410", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p410"}, {"title": "NTP 4.2.7 Patch 41", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p41"}, {"title": "NTP 4.2.7 Patch 409", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p409"}, {"title": "NTP 4.2.7 Patch 408", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p408"}, {"title": "NTP 4.2.7 Patch 407", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p407"}, {"title": "NTP 4.2.7 Patch 406", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p406"}, {"title": "NTP 4.2.7 Patch 405", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p405"}, {"title": "NTP 4.2.7 Patch 404", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p404"}, {"title": "NTP 4.2.7 Patch 403", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p403"}, {"title": "NTP 4.2.7 Patch 402", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p402"}, {"title": "NTP 4.2.7 Patch 401", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p401"}, {"title": "NTP 4.2.7 Patch 400", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p400"}, {"title": "NTP 4.2.7 Patch 40", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p40"}, {"title": "NTP 4.2.7 Patch 4", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p4"}, {"title": "NTP 4.2.7 Patch 399", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p399"}, {"title": "NTP 4.2.7 Patch 398", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p398"}, {"title": "NTP 4.2.7 Patch 397", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p397"}, {"title": "NTP 4.2.7 Patch 396", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p396"}, {"title": "NTP 4.2.7 Patch 395", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p395"}, {"title": "NTP 4.2.7 Patch 394", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p394"}, {"title": "NTP 4.2.7 Patch 393", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p393"}, {"title": "NTP 4.2.7 Patch 392", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p392"}, {"title": "NTP 4.2.7 Patch 391", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p391"}, {"title": "NTP 4.2.7 Patch 390", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p390"}, {"title": "NTP 4.2.7 Patch 39", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p39"}, {"title": "NTP 4.2.7 Patch 389", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p389"}, {"title": "NTP 4.2.7 Patch 388", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p388"}, {"title": "NTP 4.2.7 Patch 387", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p387"}, {"title": "NTP 4.2.7 Patch 386", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p386"}, {"title": "NTP 4.2.7 Patch 385", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p385"}, {"title": "NTP 4.2.7 Patch 384", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p384"}, {"title": "NTP 4.2.7 Patch 383", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p383"}, {"title": "NTP 4.2.7 Patch 382", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p382"}, {"title": "NTP 4.2.7 Patch 381", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p381"}, {"title": "NTP 4.2.7 Patch 380", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p380"}, {"title": "NTP 4.2.7 Patch 38", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p38"}, {"title": "NTP 4.2.7 Patch 379", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p379"}, {"title": "NTP 4.2.7 Patch 378", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p378"}, {"title": "NTP 4.2.7 Patch 377", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p377"}, {"title": "NTP 4.2.7 Patch 376", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p376"}, {"title": "NTP 4.2.7 Patch 375", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p375"}, {"title": "NTP 4.2.7 Patch 374", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p374"}, {"title": "NTP 4.2.7 Patch 373", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p373"}, {"title": "NTP 4.2.7 Patch 372", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p372"}, {"title": "NTP 4.2.7 Patch 371", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p371"}, {"title": "NTP 4.2.7 Patch 370", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p370"}, {"title": "NTP 4.2.7 Patch 37", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p37"}, {"title": "NTP 4.2.7 Patch 369", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p369"}, {"title": "NTP 4.2.7 Patch 368", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p368"}, {"title": "NTP 4.2.7 Patch 367", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p367"}, {"title": "NTP 4.2.7 Patch 366", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p366"}, {"title": "NTP 4.2.7 Patch 365", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p365"}, {"title": "NTP 4.2.7 Patch 364", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p364"}, {"title": "NTP 4.2.7 Patch 363", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p363"}, {"title": "NTP 4.2.7 Patch 362", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p362"}, {"title": "NTP 4.2.7 Patch 361", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p361"}, {"title": "NTP 4.2.7 Patch 360", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p360"}, {"title": "NTP 4.2.7 Patch 36", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p36"}, {"title": "NTP 4.2.7 Patch 359", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p359"}, {"title": "NTP 4.2.7 Patch 358", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p358"}, {"title": "NTP 4.2.7 Patch 357", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p357"}, {"title": "NTP 4.2.7 Patch 356", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p356"}, {"title": "NTP 4.2.7 Patch 355", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p355"}, {"title": "NTP 4.2.7 Patch 354", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p354"}, {"title": "NTP 4.2.7 Patch 353", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p353"}, {"title": "NTP 4.2.7 Patch 352", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p352"}, {"title": "NTP 4.2.7 Patch 351", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p351"}, {"title": "NTP 4.2.7 Patch 350", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p350"}, {"title": "NTP 4.2.7 Patch 35", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p35"}, {"title": "NTP 4.2.7 Patch 349", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p349"}, {"title": "NTP 4.2.7 Patch 348", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p348"}, {"title": "NTP 4.2.7 Patch 347", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p347"}, {"title": "NTP 4.2.7 Patch 346", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p346"}, {"title": "NTP 4.2.7 Patch 345", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p345"}, {"title": "NTP 4.2.7 Patch 344", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p344"}, {"title": "NTP 4.2.7 Patch 343", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p343"}, {"title": "NTP 4.2.7 Patch 342", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p342"}, {"title": "NTP 4.2.7 Patch 341", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p341"}, {"title": "NTP 4.2.7 Patch 340", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p340"}, {"title": "NTP 4.2.7 Patch 34", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p34"}, {"title": "NTP 4.2.7 Patch 339", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p339"}, {"title": "NTP 4.2.7 Patch 338", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p338"}, {"title": "NTP 4.2.7 Patch 337", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p337"}, {"title": "NTP 4.2.7 Patch 336", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p336"}, {"title": "NTP 4.2.7 Patch 335", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p335"}, {"title": "NTP 4.2.7 Patch 334", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p334"}, {"title": "NTP 4.2.7 Patch 333", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p333"}, {"title": "NTP 4.2.7 Patch 332", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p332"}, {"title": "NTP 4.2.7 Patch 331", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p331"}, {"title": "NTP 4.2.7 Patch 330", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p330"}, {"title": "NTP 4.2.7 Patch 33", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p33"}, {"title": "NTP 4.2.7 Patch 329", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p329"}, {"title": "NTP 4.2.7 Patch 328", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p328"}, {"title": "NTP 4.2.7 Patch 327", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p327"}, {"title": "NTP 4.2.7 Patch 326", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p326"}, {"title": "NTP 4.2.7 Patch 325", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p325"}, {"title": "NTP 4.2.7 Patch 324", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p324"}, {"title": "NTP 4.2.7 Patch 323", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p323"}, {"title": "NTP 4.2.7 Patch 322", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p322"}, {"title": "NTP 4.2.7 Patch 321", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p321"}, {"title": "NTP 4.2.7 Patch 320", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p320"}, {"title": "NTP 4.2.7 Patch 32", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p32"}, {"title": "NTP 4.2.7 Patch 319", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p319"}, {"title": "NTP 4.2.7 Patch 318", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p318"}, {"title": "NTP 4.2.7 Patch 317", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p317"}, {"title": "NTP 4.2.7 Patch 316", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p316"}, {"title": "NTP 4.2.7 Patch 315", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p315"}, {"title": "NTP 4.2.7 Patch 314", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p314"}, {"title": "NTP 4.2.7 Patch 313", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p313"}, {"title": "NTP 4.2.7 Patch 312", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p312"}, {"title": "NTP 4.2.7 Patch 311", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p311"}, {"title": "NTP 4.2.7 Patch 310", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p310"}, {"title": "NTP 4.2.7 Patch 31", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p31"}, {"title": "NTP 4.2.7 Patch 309", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p309"}, {"title": "NTP 4.2.7 Patch 308", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p308"}, {"title": "NTP 4.2.7 Patch 307", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p307"}, {"title": "NTP 4.2.7 Patch 306", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p306"}, {"title": "NTP 4.2.7 Patch 305", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p305"}, {"title": "NTP 4.2.7 Patch 304", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p304"}, {"title": "NTP 4.2.7 Patch 303", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p303"}, {"title": "NTP 4.2.7 Patch 302", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p302"}, {"title": "NTP 4.2.7 Patch 301", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p301"}, {"title": "NTP 4.2.7 Patch 300", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p300"}, {"title": "NTP 4.2.7 Patch 30", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p30"}, {"title": "NTP 4.2.7 Patch 3", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p3"}, {"title": "NTP 4.2.7 Patch 299", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p299"}, {"title": "NTP 4.2.7 Patch 298", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p298"}, {"title": "NTP 4.2.7 Patch 297", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p297"}, {"title": "NTP 4.2.7 Patch 296", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p296"}, {"title": "NTP 4.2.7 Patch 295", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p295"}, {"title": "NTP 4.2.7 Patch 294", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p294"}, {"title": "NTP 4.2.7 Patch 293", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p293"}, {"title": "NTP 4.2.7 Patch 292", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p292"}, {"title": "NTP 4.2.7 Patch 291", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p291"}, {"title": "NTP 4.2.7 Patch 290", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p290"}, {"title": "NTP 4.2.7 Patch 29", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p29"}, {"title": "NTP 4.2.7 Patch 289", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p289"}, {"title": "NTP 4.2.7 Patch 288", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p288"}, {"title": "NTP 4.2.7 Patch 287", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p287"}, {"title": "NTP 4.2.7 Patch 286", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p286"}, {"title": "NTP 4.2.7 Patch 285", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p285"}, {"title": "NTP 4.2.7 Patch 284", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p284"}, {"title": "NTP 4.2.7 Patch 283", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p283"}, {"title": "NTP 4.2.7 Patch 282", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p282"}, {"title": "NTP 4.2.7 Patch 281", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p281"}, {"title": "NTP 4.2.7 Patch 280", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p280"}, {"title": "NTP 4.2.7 Patch 28", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p28"}, {"title": "NTP 4.2.7 Patch 279", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p279"}, {"title": "NTP 4.2.7 Patch 278", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p278"}, {"title": "NTP 4.2.7 Patch 277", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p277"}, {"title": "NTP 4.2.7 Patch 276", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p276"}, {"title": "NTP 4.2.7 Patch 275", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p275"}, {"title": "NTP 4.2.7 Patch 274", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p274"}, {"title": "NTP 4.2.7 Patch 273", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p273"}, {"title": "NTP 4.2.7 Patch 272", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p272"}, {"title": "NTP 4.2.7 Patch 271", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p271"}, {"title": "NTP 4.2.7 Patch 270", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p270"}, {"title": "NTP 4.2.7 Patch 27", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p27"}, {"title": "NTP 4.2.7 Patch 269", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p269"}, {"title": "NTP 4.2.7 Patch 268", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p268"}, {"title": "NTP 4.2.7 Patch 267", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p267"}, {"title": "NTP 4.2.7 Patch 266", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p266"}, {"title": "NTP 4.2.7 Patch 265", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p265"}, {"title": "NTP 4.2.7 Patch 264", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p264"}, {"title": "NTP 4.2.7 Patch 263", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p263"}, {"title": "NTP 4.2.7 Patch 262", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p262"}, {"title": "NTP 4.2.7 Patch 261", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p261"}, {"title": "NTP 4.2.7 Patch 260", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p260"}, {"title": "NTP 4.2.7 Patch 26", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p26"}, {"title": "NTP 4.2.7 Patch 259", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p259"}, {"title": "NTP 4.2.7 Patch 258", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p258"}, {"title": "NTP 4.2.7 Patch 257", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p257"}, {"title": "NTP 4.2.7 Patch 256", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p256"}, {"title": "NTP 4.2.7 Patch 255", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p255"}, {"title": "NTP 4.2.7 Patch 254", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p254"}, {"title": "NTP 4.2.7 Patch 253", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p253"}, {"title": "NTP 4.2.7 Patch 252", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p252"}, {"title": "NTP 4.2.7 Patch 251", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p251"}, {"title": "NTP 4.2.7 Patch 250", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p250"}, {"title": "NTP 4.2.7 Patch 25", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p25"}, {"title": "NTP 4.2.7 Patch 249", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p249"}, {"title": "NTP 4.2.7 Patch 248", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p248"}, {"title": "NTP 4.2.7 Patch 247", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p247"}, {"title": "NTP 4.2.7 Patch 246", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p246"}, {"title": "NTP 4.2.7 Patch 245", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p245"}, {"title": "NTP 4.2.7 Patch 244", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p244"}, {"title": "NTP 4.2.7 Patch 243", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p243"}, {"title": "NTP 4.2.7 Patch 242", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p242"}, {"title": "NTP 4.2.7 Patch 241", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p241"}, {"title": "NTP 4.2.7 Patch 240", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p240"}, {"title": "NTP 4.2.7 Patch 24", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p24"}, {"title": "NTP 4.2.7 Patch 239", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p239"}, {"title": "NTP 4.2.7 Patch 238", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p238"}, {"title": "NTP 4.2.7 Patch 237", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p237"}, {"title": "NTP 4.2.7 Patch 236", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p236"}, {"title": "NTP 4.2.7 Patch 235", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p235"}, {"title": "NTP 4.2.7 Patch 234", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p234"}, {"title": "NTP 4.2.7 Patch 233", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p233"}, {"title": "NTP 4.2.7 Patch 232", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p232"}, {"title": "NTP 4.2.7 Patch 231", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p231"}, {"title": "NTP 4.2.7 Patch 230", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p230"}, {"title": "NTP 4.2.7 Patch 23", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p23"}, {"title": "NTP 4.2.7 Patch 229", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p229"}, {"title": "NTP 4.2.7 Patch 228", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p228"}, {"title": "NTP 4.2.7 Patch 227", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p227"}, {"title": "NTP 4.2.7 Patch 226", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p226"}, {"title": "NTP 4.2.7 Patch 225", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p225"}, {"title": "NTP 4.2.7 Patch 224", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p224"}, {"title": "NTP 4.2.7 Patch 223", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p223"}, {"title": "NTP 4.2.7 Patch 222", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p222"}, {"title": "NTP 4.2.7 Patch 221", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p221"}, {"title": "NTP 4.2.7 Patch 220", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p220"}, {"title": "NTP 4.2.7 Patch 22", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p22"}, {"title": "NTP 4.2.7 Patch 219", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p219"}, {"title": "NTP 4.2.7 Patch 218", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p218"}, {"title": "NTP 4.2.7 Patch 217", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p217"}, {"title": "NTP 4.2.7 Patch 216", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p216"}, {"title": "NTP 4.2.7 Patch 215", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p215"}, {"title": "NTP 4.2.7 Patch 214", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p214"}, {"title": "NTP 4.2.7 Patch 213", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p213"}, {"title": "NTP 4.2.7 Patch 212", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p212"}, {"title": "NTP 4.2.7 Patch 211", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p211"}, {"title": "NTP 4.2.7 Patch 210", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p210"}, {"title": "NTP 4.2.7 Patch 21", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p21"}, {"title": "NTP 4.2.7 Patch 209", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p209"}, {"title": "NTP 4.2.7 Patch 208", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p208"}, {"title": "NTP 4.2.7 Patch 207", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p207"}, {"title": "NTP 4.2.7 Patch 206", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p206"}, {"title": "NTP 4.2.7 Patch 205", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p205"}, {"title": "NTP 4.2.7 Patch 204", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p204"}, {"title": "NTP 4.2.7 Patch 203", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p203"}, {"title": "NTP 4.2.7 Patch 202", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p202"}, {"title": "NTP 4.2.7 Patch 201", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p201"}, {"title": "NTP 4.2.7 Patch 200", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p200"}, {"title": "NTP 4.2.7 Patch 20", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p20"}, {"title": "NTP 4.2.7 Patch 2", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p2"}, {"title": "NTP 4.2.7 Patch 199", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p199"}, {"title": "NTP 4.2.7 Patch 198", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p198"}, {"title": "NTP 4.2.7 Patch 197", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p197"}, {"title": "NTP 4.2.7 Patch 196", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p196"}, {"title": "NTP 4.2.7 Patch 195", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p195"}, {"title": "NTP 4.2.7 Patch 194", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p194"}, {"title": "NTP 4.2.7 Patch 193", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p193"}, {"title": "NTP 4.2.7 Patch 192", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p192"}, {"title": "NTP 4.2.7 Patch 191", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p191"}, {"title": "NTP 4.2.7 Patch 190", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p190"}, {"title": "NTP 4.2.7 Patch 19", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p19"}, {"title": "NTP 4.2.7 Patch 189", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p189"}, {"title": "NTP 4.2.7 Patch 188", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p188"}, {"title": "NTP 4.2.7 Patch 187", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p187"}, {"title": "NTP 4.2.7 Patch 186", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p186"}, {"title": "NTP 4.2.7 Patch 185", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p185"}, {"title": "NTP 4.2.7 Patch 184", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p184"}, {"title": "NTP 4.2.7 Patch 183", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p183"}, {"title": "NTP 4.2.7 Patch 182", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p182"}, {"title": "NTP 4.2.7 Patch 181", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p181"}, {"title": "NTP 4.2.7 Patch 180", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p180"}, {"title": "NTP 4.2.7 Patch 18", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p18"}, {"title": "NTP 4.2.7 Patch 179", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p179"}, {"title": "NTP 4.2.7 Patch 178", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p178"}, {"title": "NTP 4.2.7 Patch 177", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p177"}, {"title": "NTP 4.2.7 Patch 176", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p176"}, {"title": "NTP 4.2.7 Patch 175", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p175"}, {"title": "NTP 4.2.7 Patch 174", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p174"}, {"title": "NTP 4.2.7 Patch 173", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p173"}, {"title": "NTP 4.2.7 Patch 172", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p172"}, {"title": "NTP 4.2.7 Patch 171", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p171"}, {"title": "NTP 4.2.7 Patch 170", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p170"}, {"title": "NTP 4.2.7 Patch 17", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p17"}, {"title": "NTP 4.2.7 Patch 166", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p166"}, {"title": "NTP 4.2.7 Patch 165", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p165"}, {"title": "NTP 4.2.7 Patch 164", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p164"}, {"title": "NTP 4.2.7 Patch 163", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p163"}, {"title": "NTP 4.2.7 Patch 162", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p162"}, {"title": "NTP 4.2.7 Patch 161", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p161"}, {"title": "NTP 4.2.7 Patch 160", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p160"}, {"title": "NTP 4.2.7 Patch 16", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p16"}, {"title": "NTP 4.2.7 Patch 159", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p159"}, {"title": "NTP 4.2.7 Patch 158", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p158"}, {"title": "NTP 4.2.7 Patch 157", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p157"}, {"title": "NTP 4.2.7 Patch 156", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p156"}, {"title": "NTP 4.2.7 Patch 155", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p155"}, {"title": "NTP 4.2.7 Patch 154", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p154"}, {"title": "NTP 4.2.7 Patch 153", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p153"}, {"title": "NTP 4.2.7 Patch 152", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p152"}, {"title": "NTP 4.2.7 Patch 151", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p151"}, {"title": "NTP 4.2.7 Patch 150", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p150"}, {"title": "NTP 4.2.7 Patch 15", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p15"}, {"title": "NTP 4.2.7 Patch 149", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p149"}, {"title": "NTP 4.2.7 Patch 148", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p148"}, {"title": "NTP 4.2.7 Patch 147", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p147"}, {"title": "NTP 4.2.7 Patch 146", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p146"}, {"title": "NTP 4.2.7 Patch 145", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p145"}, {"title": "NTP 4.2.7 Patch 144", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p144"}, {"title": "NTP 4.2.7 Patch 143", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p143"}, {"title": "NTP 4.2.7 Patch 142", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p142"}, {"title": "NTP 4.2.7 Patch 141", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p141"}, {"title": "NTP 4.2.7 Patch 140", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p140"}, {"title": "NTP 4.2.7 Patch 14", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p14"}, {"title": "NTP 4.2.7 Patch 139", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p139"}, {"title": "NTP 4.2.7 Patch 138", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p138"}, {"title": "NTP 4.2.7 Patch 137", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p137"}, {"title": "NTP 4.2.7 Patch 136", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p136"}, {"title": "NTP 4.2.7 Patch 135", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p135"}, {"title": "NTP 4.2.7 Patch 134", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p134"}, {"title": "NTP 4.2.7 Patch 133", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p133"}, {"title": "NTP 4.2.7 Patch 132", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p132"}, {"title": "NTP 4.2.7 Patch 131", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p131"}, {"title": "NTP 4.2.7 Patch 130", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p130"}, {"title": "NTP 4.2.7 Patch 13", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p13"}, {"title": "NTP 4.2.7 Patch 129", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p129"}, {"title": "NTP 4.2.7 Patch 128", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p128"}, {"title": "NTP 4.2.7 Patch 127", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p127"}, {"title": "NTP 4.2.7 Patch 126", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p126"}, {"title": "NTP 4.2.7 Patch 125", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p125"}, {"title": "NTP 4.2.7 Patch 124", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p124"}, {"title": "NTP 4.2.7 Patch 123", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p123"}, {"title": "NTP 4.2.7 Patch 122", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p122"}, {"title": "NTP 4.2.7 Patch 121", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p121"}, {"title": "NTP 4.2.7 Patch 120", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p120"}, {"title": "NTP 4.2.7 Patch 12", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p12"}, {"title": "NTP 4.2.7 Patch 119", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p119"}, {"title": "NTP 4.2.7 Patch 118", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p118"}, {"title": "NTP 4.2.7 Patch 117", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p117"}, {"title": "NTP 4.2.7 Patch 116", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p116"}, {"title": "NTP 4.2.7 Patch 115", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p115"}, {"title": "NTP 4.2.7 Patch 114", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p114"}, {"title": "NTP 4.2.7 Patch 113", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p113"}, {"title": "NTP 4.2.7 Patch 112", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p112"}, {"title": "NTP 4.2.7 Patch 111", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p111"}, {"title": "NTP 4.2.7 Patch 110", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p110"}, {"title": "NTP 4.2.7 Patch 11", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p11"}, {"title": "NTP 4.2.7 Patch 109", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p109"}, {"title": "NTP 4.2.7 Patch 108", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p108"}, {"title": "NTP 4.2.7 Patch 107", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p107"}, {"title": "NTP 4.2.7 Patch 106", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p106"}, {"title": "NTP 4.2.7 Patch 105", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p105"}, {"title": "NTP 4.2.7 Patch 104", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p104"}, {"title": "NTP 4.2.7 Patch 103", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p103"}, {"title": "NTP 4.2.7 Patch 102", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p102"}, {"title": "NTP 4.2.7 Patch 101", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p101"}, {"title": "NTP 4.2.7 Patch 100", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p100"}, {"title": "NTP 4.2.7 Patch 10", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p10"}, {"title": "NTP 4.2.7 Patch 1", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p1"}, {"title": "NTP 4.2.7 Patch 0", "id": "cpe:2.3:a:ntp:ntp:4.2.7:p0"}, {"title": "NTP 4.2.7", "id": "cpe:2.3:a:ntp:ntp:4.2.7"}, {"title": "NTP 4.2.6 Patch 5 Release Candidate 3", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p5_rc3"}, {"title": "NTP 4.2.6 Patch 5 Release Candidate 2", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p5_rc2"}, {"title": "NTP 4.2.6 Patch 5 Release Candidate 1", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p5_rc1"}, {"title": "NTP 4.2.6 Patch 5", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p5"}, {"title": "NTP 4.2.6 Patch 4 Release Candidate 2", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p4_rc2"}, {"title": "NTP 4.2.6 Patch 4 Release Candidate 1", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p4_rc1"}, {"title": "NTP 4.2.6 Patch 4 Beta 2", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p4_beta2"}, {"title": "NTP 4.2.6 Patch 4 Beta 1", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p4_beta1"}, {"title": "NTP 4.2.6 Patch 4", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p4"}, {"title": "NTP 4.2.6 Patch 3 Release Candidate 9", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p3_rc9"}, {"title": "NTP 4.2.6 Patch 3 Release Candidate 8", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p3_rc8"}, {"title": "NTP 4.2.6 Patch 3 Release Candidate 7", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p3_rc7"}, {"title": "NTP 4.2.6 Patch 3 Release Candidate 6", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p3_rc6"}, {"title": "NTP 4.2.6 Patch 3 Release Candidate 5", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p3_rc5"}, {"title": "NTP 4.2.6 Patch 3 Release Candidate 4", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p3_rc4"}, {"title": "NTP 4.2.6 Patch 3 Release Candidate 3", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p3_rc3"}, {"title": "NTP 4.2.6 Patch 3 Release Candidate 2", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p3_rc2"}, {"title": "NTP 4.2.6 Patch 3 Release Candidate 12", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p3_rc12"}, {"title": "NTP 4.2.6 Patch 3 Release Candidate 11", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p3_rc11"}, {"title": "NTP 4.2.6 Patch 3 Release Candidate 10", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p3_rc10"}, {"title": "NTP 4.2.6 Patch 3 Release Candidate 1", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p3_rc1"}, {"title": "NTP 4.2.6 Patch 3 Beta 1", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p3_beta1"}, {"title": "NTP 4.2.6 Patch 3", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p3"}, {"title": "NTP 4.2.6 Patch 2 Release Candidate 7", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p2_rc7"}, {"title": "NTP 4.2.6 Patch 2 Release Candidate 6", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p2_rc6"}, {"title": "NTP 4.2.6 Patch 2 Release Candidate 5", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p2_rc5"}, {"title": "NTP 4.2.6 Patch 2 Release Candidate 4", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p2_rc4"}, {"title": "NTP 4.2.6 Patch 2 Release Candidate 3", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p2_rc3"}, {"title": "NTP 4.2.6 Patch 2 Release Candidate 2", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p2_rc2"}, {"title": "NTP 4.2.6 Patch 2 Release Candidate 1", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p2_rc1"}, {"title": "NTP 4.2.6 Patch 2", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p2"}, {"title": "NTP 4.2.6 Patch 1 Release Candidate 6", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p1_rc6"}, {"title": "NTP 4.2.6 Patch 1 Release Candidate 5", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p1_rc5"}, {"title": "NTP 4.2.6 Patch 1 Release Candidate 4", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p1_rc4"}, {"title": "NTP 4.2.6 Patch 1 Release Candidate 3", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p1_rc3"}, {"title": "NTP 4.2.6 Patch 1 Release Candidate 2", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p1_rc2"}, {"title": "NTP 4.2.6 Patch 1 Release Candidate 1", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p1_rc1"}, {"title": "NTP 4.2.6 Patch 1", "id": "cpe:2.3:a:ntp:ntp:4.2.6:p1"}, {"title": "NTP 4.2.6", "id": "cpe:2.3:a:ntp:ntp:4.2.6"}, {"title": "NTP 4.2.5 Patch 250 Release Candidate 1", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p250_rc1"}, {"title": "NTP 4.2.5 Patch 249 Release Candidate 1", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p249_rc1"}, {"title": "NTP 4.2.5 Patch 248 Release Candidate 1", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p248_rc1"}, {"title": "NTP 4.2.5 Patch 247 Release Candidate 1", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p247_rc1"}, {"title": "NTP 4.2.5 Patch 246 Release Candidate 1", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p246_rc1"}, {"title": "NTP 4.2.5 Patch 245 Release Candidate 1", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p245_rc1"}, {"title": "NTP 4.2.5 Patch 244 Release Candidate 1", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p244_rc1"}, {"title": "NTP 4.2.5 Patch 243 Release Candidate 1", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p243_rc1"}, {"title": "NTP 4.2.5 Patch 242 Release Candidate 1", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p242_rc1"}, {"title": "NTP 4.2.5 Patch 241 Release Candidate 1", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p241_rc1"}, {"title": "NTP 4.2.5 Patch 240 Release Candidate 1", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p240_rc1"}, {"title": "NTP 4.2.5 Patch 239 Release Candidate 1", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p239_rc1"}, {"title": "NTP 4.2.5 Patch 238 Release Candidate 1", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p238_rc1"}, {"title": "NTP 4.2.5 Patch 237 Release Candidate 1", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p237_rc1"}, {"title": "NTP 4.2.5 Patch 236 Release Candidate 1", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p236_rc1"}, {"title": "NTP 4.2.5 Patch 235 Release Candidate 1", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p235_rc1"}, {"title": "NTP 4.2.5 Patch 234 Release Candidate 1", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p234_rc1"}, {"title": "NTP 4.2.5 Patch 233 Release Candidate 1", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p233_rc1"}, {"title": "NTP 4.2.5 Patch 232 Release Candidate 1", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p232_rc1"}, {"title": "NTP 4.2.5 Patch 231 Release Candidate 1", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p231_rc1"}, {"title": "NTP 4.2.5 Patch 230", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p230"}, {"title": "NTP 4.2.5 Patch 229", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p229"}, {"title": "NTP 4.2.5 Patch 228", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p228"}, {"title": "NTP 4.2.5 Patch 227", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p227"}, {"title": "NTP 4.2.5 Patch 226", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p226"}, {"title": "NTP 4.2.5 Patch 225", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p225"}, {"title": "NTP 4.2.5 Patch 224", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p224"}, {"title": "NTP 4.2.5 Patch 223", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p223"}, {"title": "NTP 4.2.5 Patch 222", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p222"}, {"title": "NTP 4.2.5 Patch 221", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p221"}, {"title": "NTP 4.2.5 Patch 220", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p220"}, {"title": "NTP 4.2.5 Patch 219", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p219"}, {"title": "NTP 4.2.5 Patch 218", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p218"}, {"title": "NTP 4.2.5 Patch 217", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p217"}, {"title": "NTP 4.2.5 Patch 216", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p216"}, {"title": "NTP 4.2.5 Patch 215", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p215"}, {"title": "NTP 4.2.5 Patch 214", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p214"}, {"title": "NTP 4.2.5 Patch 213", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p213"}, {"title": "NTP 4.2.5 Patch 212", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p212"}, {"title": "NTP 4.2.5 Patch 211", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p211"}, {"title": "NTP 4.2.5 Patch 210", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p210"}, {"title": "NTP 4.2.5 Patch 209", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p209"}, {"title": "NTP 4.2.5 Patch 208", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p208"}, {"title": "NTP 4.2.5 Patch 207", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p207"}, {"title": "NTP 4.2.5 Patch 206", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p206"}, {"title": "NTP 4.2.5 Patch 205", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p205"}, {"title": "NTP 4.2.5 Patch 204", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p204"}, {"title": "NTP 4.2.5 Patch 203", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p203"}, {"title": "NTP 4.2.5 Patch 202", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p202"}, {"title": "NTP 4.2.5 Patch 201", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p201"}, {"title": "NTP 4.2.5 Patch 200", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p200"}, {"title": "NTP 4.2.5 Patch 199", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p199"}, {"title": "NTP 4.2.5 Patch 198", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p198"}, {"title": "NTP 4.2.5 Patch 197", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p197"}, {"title": "NTP 4.2.5 Patch 196", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p196"}, {"title": "NTP 4.2.5 Patch 195", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p195"}, {"title": "NTP 4.2.5 Patch 194", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p194"}, {"title": "NTP 4.2.5 Patch 193", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p193"}, {"title": "NTP 4.2.5 Patch 192", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p192"}, {"title": "NTP 4.2.5 Patch 191", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p191"}, {"title": "NTP 4.2.5 Patch 190", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p190"}, {"title": "NTP 4.2.5 Patch 189", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p189"}, {"title": "NTP 4.2.5 Patch 188", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p188"}, {"title": "NTP 4.2.5 Patch 187", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p187"}, {"title": "NTP 4.2.5 Patch 186", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p186"}, {"title": "NTP 4.2.5 Patch 185", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p185"}, {"title": "NTP 4.2.5 Patch 184", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p184"}, {"title": "NTP 4.2.5 Patch 183", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p183"}, {"title": "NTP 4.2.5 Patch 182", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p182"}, {"title": "NTP 4.2.5 Patch 181", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p181"}, {"title": "NTP 4.2.5 Patch 180", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p180"}, {"title": "NTP 4.2.5 Patch 179", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p179"}, {"title": "NTP 4.2.5 Patch 178", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p178"}, {"title": "NTP 4.2.5 Patch 177", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p177"}, {"title": "NTP 4.2.5 Patch 176", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p176"}, {"title": "NTP 4.2.5 Patch 175", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p175"}, {"title": "NTP 4.2.5 Patch 174", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p174"}, {"title": "NTP 4.2.5 Patch 173", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p173"}, {"title": "NTP 4.2.5 Patch 172", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p172"}, {"title": "NTP 4.2.5 Patch 171", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p171"}, {"title": "NTP 4.2.5 Patch 170", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p170"}, {"title": "NTP 4.2.5 Patch 169", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p169"}, {"title": "NTP 4.2.5 Patch 168", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p168"}, {"title": "NTP 4.2.5 Patch 167", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p167"}, {"title": "NTP 4.2.5 Patch 166", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p166"}, {"title": "NTP 4.2.5 Patch 165", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p165"}, {"title": "NTP 4.2.5 Patch 164", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p164"}, {"title": "NTP 4.2.5 Patch 163", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p163"}, {"title": "NTP 4.2.5 Patch 162", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p162"}, {"title": "NTP 4.2.5 Patch 161", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p161"}, {"title": "NTP 4.2.5 Patch 160", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p160"}, {"title": "NTP 4.2.5 Patch 159", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p159"}, {"title": "NTP 4.2.5 Patch 158", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p158"}, {"title": "NTP 4.2.5 Patch 157", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p157"}, {"title": "NTP 4.2.5 Patch 156", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p156"}, {"title": "NTP 4.2.5 Patch 155", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p155"}, {"title": "NTP 4.2.5 Patch 154", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p154"}, {"title": "NTP 4.2.5 Patch 153", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p153"}, {"title": "NTP 4.2.5 Patch 152", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p152"}, {"title": "NTP 4.2.5 Patch 151", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p151"}, {"title": "NTP 4.2.5 Patch 150", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p150"}, {"title": "NTP 4.2.5 Patch 149", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p149"}, {"title": "NTP 4.2.5 Patch 148", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p148"}, {"title": "NTP 4.2.5 Patch 147", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p147"}, {"title": "NTP 4.2.5 Patch 146", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p146"}, {"title": "NTP 4.2.5 Patch 145", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p145"}, {"title": "NTP 4.2.5 Patch 144", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p144"}, {"title": "NTP 4.2.5 Patch 143", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p143"}, {"title": "NTP 4.2.5 Patch 142", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p142"}, {"title": "NTP 4.2.5 Patch 141", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p141"}, {"title": "NTP 4.2.5 Patch 140", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p140"}, {"title": "NTP 4.2.5 Patch 139", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p139"}, {"title": "NTP 4.2.5 Patch 138", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p138"}, {"title": "NTP 4.2.5 Patch 137", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p137"}, {"title": "NTP 4.2.5 Patch 136", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p136"}, {"title": "NTP 4.2.5 Patch 135", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p135"}, {"title": "NTP 4.2.5 Patch 134", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p134"}, {"title": "NTP 4.2.5 Patch 133", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p133"}, {"title": "NTP 4.2.5 Patch 132", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p132"}, {"title": "NTP 4.2.5 Patch 131", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p131"}, {"title": "NTP 4.2.5 Patch 130", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p130"}, {"title": "NTP 4.2.5 Patch 129", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p129"}, {"title": "NTP 4.2.5 Patch 128", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p128"}, {"title": "NTP 4.2.5 Patch 127", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p127"}, {"title": "NTP 4.2.5 Patch 126", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p126"}, {"title": "NTP 4.2.5 Patch 125", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p125"}, {"title": "NTP 4.2.5 Patch 124", "id": "cpe:2.3:a:ntp:ntp:4.2.5:p124"}, {"title": "NTP 4.2.4 Patch 8", "id": "cpe:2.3:a:ntp:ntp:4.2.4:p8"}, {"title": "NTP 4.2.4 Patch 7 Release Candidate 7", "id": "cpe:2.3:a:ntp:ntp:4.2.4:p7_rc7"}, {"title": "NTP 4.2.4 Patch 7 Release Candidate 6", "id": "cpe:2.3:a:ntp:ntp:4.2.4:p7_rc6"}, {"title": "NTP 4.2.4 Patch 7 Release Candidate 5", "id": "cpe:2.3:a:ntp:ntp:4.2.4:p7_rc5"}, {"title": "NTP 4.2.4 Patch 7 Release Candidate 4", "id": "cpe:2.3:a:ntp:ntp:4.2.4:p7_rc4"}, {"title": "NTP 4.2.4 Patch 7 Release Candidate 3", "id": "cpe:2.3:a:ntp:ntp:4.2.4:p7_rc3"}, {"title": "NTP 4.2.4 Patch 7 Release Candidate 2", "id": "cpe:2.3:a:ntp:ntp:4.2.4:p7_rc2"}, {"title": "NTP 4.2.4 Patch 7 Release Candidate 1", "id": "cpe:2.3:a:ntp:ntp:4.2.4:p7_rc1"}, {"title": "NTP 4.2.4 Patch 7", "id": "cpe:2.3:a:ntp:ntp:4.2.4:p7"}, {"title": "NTP 4.2.4 Patch 6", "id": "cpe:2.3:a:ntp:ntp:4.2.4:p6"}, {"title": "NTP 4.2.4 Patch 5", "id": "cpe:2.3:a:ntp:ntp:4.2.4:p5"}, {"title": "NTP 4.2.4 Patch 4", "id": "cpe:2.3:a:ntp:ntp:4.2.4:p4"}, {"title": "NTP 4.2.4 Patch 3", "id": "cpe:2.3:a:ntp:ntp:4.2.4:p3"}, {"title": "NTP 4.2.4 Patch 2", "id": "cpe:2.3:a:ntp:ntp:4.2.4:p2"}, {"title": "NTP 4.2.4 Patch 1", "id": "cpe:2.3:a:ntp:ntp:4.2.4:p1"}, {"title": "NTP 4.2.4 Patch 0", "id": "cpe:2.3:a:ntp:ntp:4.2.4:p0"}, {"title": "NTP 4.2.4", "id": "cpe:2.3:a:ntp:ntp:4.2.4"}, {"title": "NTP 4.2.2 Patch 4", "id": "cpe:2.3:a:ntp:ntp:4.2.2:p4"}, {"title": "NTP 4.2.2 Patch 3", "id": "cpe:2.3:a:ntp:ntp:4.2.2:p3"}, {"title": "NTP 4.2.2 Patch 2", "id": "cpe:2.3:a:ntp:ntp:4.2.2:p2"}, {"title": "NTP 4.2.2 Patch 1", "id": "cpe:2.3:a:ntp:ntp:4.2.2:p1"}, {"title": "NTP 4.2.2", "id": "cpe:2.3:a:ntp:ntp:4.2.2"}, {"title": "NTP 4.2.0", "id": "cpe:2.3:a:ntp:ntp:4.2.0"}, {"title": "NTP 4.1.2", "id": "cpe:2.3:a:ntp:ntp:4.1.2"}, {"title": "NTP 4.1.0", "id": "cpe:2.3:a:ntp:ntp:4.1.0"}, {"title": "NTP 4.0.99", "id": "cpe:2.3:a:ntp:ntp:4.0.99"}, {"title": "NTP 4.0.98", "id": "cpe:2.3:a:ntp:ntp:4.0.98"}, {"title": "NTP 4.0.97", "id": "cpe:2.3:a:ntp:ntp:4.0.97"}, {"title": "NTP 4.0.96", "id": "cpe:2.3:a:ntp:ntp:4.0.96"}, {"title": "NTP 4.0.95", "id": "cpe:2.3:a:ntp:ntp:4.0.95"}, {"title": "NTP 4.0.94", "id": "cpe:2.3:a:ntp:ntp:4.0.94"}, {"title": "NTP 4.0.93", "id": "cpe:2.3:a:ntp:ntp:4.0.93"}, {"title": "NTP 4.0.92", "id": "cpe:2.3:a:ntp:ntp:4.0.92"}, {"title": "NTP 4.0.91", "id": "cpe:2.3:a:ntp:ntp:4.0.91"}, {"title": "NTP 4.0.90", "id": "cpe:2.3:a:ntp:ntp:4.0.90"}, {"title": "NTP 4.0.73", "id": "cpe:2.3:a:ntp:ntp:4.0.73"}, {"title": "NTP 4.0.72", "id": "cpe:2.3:a:ntp:ntp:4.0.72"}], "vulnerable_configuration_cpe_2_2": ["cpe:/o:oracle:solaris:11.3", "cpe:/o:oracle:solaris:10", "cpe:/o:novell:leap:42.1", "cpe:/o:novell:suse_openstack_cloud:5", "cpe:/o:novell:suse_linux_enterprise_debuginfo:11.0:sp3", "cpe:/o:novell:suse_linux_enterprise_debuginfo:11.0:sp2", "cpe:/o:novell:suse_linux_enterprise_server:11.0:sp3:~~ltss~~~", "cpe:/o:novell:suse_linux_enterprise_server:11.0:sp2:~~ltss~~~", "cpe:/o:novell:suse_manager:2.1", "cpe:/o:novell:suse_manager_proxy:2.1", "cpe:/o:novell:opensuse:13.2", "cpe:/o:novell:suse_linux_enterprise_server:11.0:sp4", "cpe:/o:novell:suse_linux_enterprise_debuginfo:11.0:sp4", "cpe:/o:novell:suse_linux_enterprise_server:12.0:sp1", "cpe:/o:novell:suse_linux_enterprise_desktop:12.0:sp1", "cpe:/a:ntp:ntp:4.2.8:p7", "cpe:/a:ntp:ntp:4.2.8:p6", "cpe:/a:ntp:ntp:4.2.8:p5", "cpe:/a:ntp:ntp:4.2.8:p4", "cpe:/a:ntp:ntp:4.2.8:p3_rc3", "cpe:/a:ntp:ntp:4.2.8:p3_rc2", "cpe:/a:ntp:ntp:4.2.8:p3_rc1", "cpe:/a:ntp:ntp:4.2.8:p3", "cpe:/a:ntp:ntp:4.2.8:p2_rc3", "cpe:/a:ntp:ntp:4.2.8:p2_rc2", "cpe:/a:ntp:ntp:4.2.8:p2_rc1", "cpe:/a:ntp:ntp:4.2.8:p2", "cpe:/a:ntp:ntp:4.2.8:p1_rc2", "cpe:/a:ntp:ntp:4.2.8:p1_rc1", "cpe:/a:ntp:ntp:4.2.8:p1_beta5", "cpe:/a:ntp:ntp:4.2.8:p1_beta4", "cpe:/a:ntp:ntp:4.2.8:p1_beta3", "cpe:/a:ntp:ntp:4.2.8:p1_beta2", "cpe:/a:ntp:ntp:4.2.8:p1_beta1", "cpe:/a:ntp:ntp:4.2.8:p1", "cpe:/a:ntp:ntp:4.2.8", "cpe:/a:ntp:ntp:4.2.7p444", "cpe:/a:ntp:ntp:4.2.7:p99", "cpe:/a:ntp:ntp:4.2.7:p98", "cpe:/a:ntp:ntp:4.2.7:p97", "cpe:/a:ntp:ntp:4.2.7:p96", "cpe:/a:ntp:ntp:4.2.7:p95", "cpe:/a:ntp:ntp:4.2.7:p94", "cpe:/a:ntp:ntp:4.2.7:p93", "cpe:/a:ntp:ntp:4.2.7:p92", "cpe:/a:ntp:ntp:4.2.7:p91", "cpe:/a:ntp:ntp:4.2.7:p90", "cpe:/a:ntp:ntp:4.2.7:p9", "cpe:/a:ntp:ntp:4.2.7:p89", "cpe:/a:ntp:ntp:4.2.7:p88", "cpe:/a:ntp:ntp:4.2.7:p87", "cpe:/a:ntp:ntp:4.2.7:p86", "cpe:/a:ntp:ntp:4.2.7:p85", "cpe:/a:ntp:ntp:4.2.7:p84", "cpe:/a:ntp:ntp:4.2.7:p83", "cpe:/a:ntp:ntp:4.2.7:p82", "cpe:/a:ntp:ntp:4.2.7:p81", "cpe:/a:ntp:ntp:4.2.7:p80", "cpe:/a:ntp:ntp:4.2.7:p8", "cpe:/a:ntp:ntp:4.2.7:p79", "cpe:/a:ntp:ntp:4.2.7:p78", "cpe:/a:ntp:ntp:4.2.7:p77", "cpe:/a:ntp:ntp:4.2.7:p76", "cpe:/a:ntp:ntp:4.2.7:p75", "cpe:/a:ntp:ntp:4.2.7:p74", "cpe:/a:ntp:ntp:4.2.7:p73", "cpe:/a:ntp:ntp:4.2.7:p72", "cpe:/a:ntp:ntp:4.2.7:p71", "cpe:/a:ntp:ntp:4.2.7:p70", "cpe:/a:ntp:ntp:4.2.7:p7", "cpe:/a:ntp:ntp:4.2.7:p69", "cpe:/a:ntp:ntp:4.2.7:p68", "cpe:/a:ntp:ntp:4.2.7:p67", "cpe:/a:ntp:ntp:4.2.7:p66", "cpe:/a:ntp:ntp:4.2.7:p65", "cpe:/a:ntp:ntp:4.2.7:p64", "cpe:/a:ntp:ntp:4.2.7:p63", "cpe:/a:ntp:ntp:4.2.7:p62", "cpe:/a:ntp:ntp:4.2.7:p61", "cpe:/a:ntp:ntp:4.2.7:p60", "cpe:/a:ntp:ntp:4.2.7:p6", "cpe:/a:ntp:ntp:4.2.7:p59", "cpe:/a:ntp:ntp:4.2.7:p58", "cpe:/a:ntp:ntp:4.2.7:p57", "cpe:/a:ntp:ntp:4.2.7:p56", "cpe:/a:ntp:ntp:4.2.7:p55", "cpe:/a:ntp:ntp:4.2.7:p54", "cpe:/a:ntp:ntp:4.2.7:p53", "cpe:/a:ntp:ntp:4.2.7:p52", "cpe:/a:ntp:ntp:4.2.7:p51", "cpe:/a:ntp:ntp:4.2.7:p50", "cpe:/a:ntp:ntp:4.2.7:p5", "cpe:/a:ntp:ntp:4.2.7:p49", "cpe:/a:ntp:ntp:4.2.7:p486_rc1", "cpe:/a:ntp:ntp:4.2.7:p485_rc1", "cpe:/a:ntp:ntp:4.2.7:p484_rc1", "cpe:/a:ntp:ntp:4.2.7:p483", "cpe:/a:ntp:ntp:4.2.7:p482", "cpe:/a:ntp:ntp:4.2.7:p481", "cpe:/a:ntp:ntp:4.2.7:p480", "cpe:/a:ntp:ntp:4.2.7:p48", "cpe:/a:ntp:ntp:4.2.7:p479", "cpe:/a:ntp:ntp:4.2.7:p478", "cpe:/a:ntp:ntp:4.2.7:p477", "cpe:/a:ntp:ntp:4.2.7:p476", "cpe:/a:ntp:ntp:4.2.7:p475", "cpe:/a:ntp:ntp:4.2.7:p474", "cpe:/a:ntp:ntp:4.2.7:p473", "cpe:/a:ntp:ntp:4.2.7:p472", "cpe:/a:ntp:ntp:4.2.7:p471", "cpe:/a:ntp:ntp:4.2.7:p470", "cpe:/a:ntp:ntp:4.2.7:p47", "cpe:/a:ntp:ntp:4.2.7:p469", "cpe:/a:ntp:ntp:4.2.7:p468", "cpe:/a:ntp:ntp:4.2.7:p467", "cpe:/a:ntp:ntp:4.2.7:p466", "cpe:/a:ntp:ntp:4.2.7:p465", "cpe:/a:ntp:ntp:4.2.7:p464", "cpe:/a:ntp:ntp:4.2.7:p463", "cpe:/a:ntp:ntp:4.2.7:p462", "cpe:/a:ntp:ntp:4.2.7:p461", "cpe:/a:ntp:ntp:4.2.7:p460", "cpe:/a:ntp:ntp:4.2.7:p46", "cpe:/a:ntp:ntp:4.2.7:p459", "cpe:/a:ntp:ntp:4.2.7:p458", "cpe:/a:ntp:ntp:4.2.7:p457", "cpe:/a:ntp:ntp:4.2.7:p456", "cpe:/a:ntp:ntp:4.2.7:p455", "cpe:/a:ntp:ntp:4.2.7:p454", "cpe:/a:ntp:ntp:4.2.7:p453", "cpe:/a:ntp:ntp:4.2.7:p452", "cpe:/a:ntp:ntp:4.2.7:p451", "cpe:/a:ntp:ntp:4.2.7:p450", "cpe:/a:ntp:ntp:4.2.7:p45", "cpe:/a:ntp:ntp:4.2.7:p449", "cpe:/a:ntp:ntp:4.2.7:p448", "cpe:/a:ntp:ntp:4.2.7:p447", "cpe:/a:ntp:ntp:4.2.7:p446", "cpe:/a:ntp:ntp:4.2.7:p445", "cpe:/a:ntp:ntp:4.2.7:p444", "cpe:/a:ntp:ntp:4.2.7:p443", "cpe:/a:ntp:ntp:4.2.7:p442", "cpe:/a:ntp:ntp:4.2.7:p441", "cpe:/a:ntp:ntp:4.2.7:p440", "cpe:/a:ntp:ntp:4.2.7:p44", "cpe:/a:ntp:ntp:4.2.7:p439", "cpe:/a:ntp:ntp:4.2.7:p438", "cpe:/a:ntp:ntp:4.2.7:p437", "cpe:/a:ntp:ntp:4.2.7:p436", "cpe:/a:ntp:ntp:4.2.7:p435", "cpe:/a:ntp:ntp:4.2.7:p434", "cpe:/a:ntp:ntp:4.2.7:p433", "cpe:/a:ntp:ntp:4.2.7:p432", "cpe:/a:ntp:ntp:4.2.7:p431", "cpe:/a:ntp:ntp:4.2.7:p430", "cpe:/a:ntp:ntp:4.2.7:p43", "cpe:/a:ntp:ntp:4.2.7:p429", "cpe:/a:ntp:ntp:4.2.7:p428", "cpe:/a:ntp:ntp:4.2.7:p427", "cpe:/a:ntp:ntp:4.2.7:p426", "cpe:/a:ntp:ntp:4.2.7:p425", "cpe:/a:ntp:ntp:4.2.7:p424", "cpe:/a:ntp:ntp:4.2.7:p423", "cpe:/a:ntp:ntp:4.2.7:p422", "cpe:/a:ntp:ntp:4.2.7:p421", "cpe:/a:ntp:ntp:4.2.7:p420", "cpe:/a:ntp:ntp:4.2.7:p42", "cpe:/a:ntp:ntp:4.2.7:p419", "cpe:/a:ntp:ntp:4.2.7:p418", "cpe:/a:ntp:ntp:4.2.7:p417", "cpe:/a:ntp:ntp:4.2.7:p416", "cpe:/a:ntp:ntp:4.2.7:p415", "cpe:/a:ntp:ntp:4.2.7:p414", "cpe:/a:ntp:ntp:4.2.7:p413", "cpe:/a:ntp:ntp:4.2.7:p412", "cpe:/a:ntp:ntp:4.2.7:p411", "cpe:/a:ntp:ntp:4.2.7:p410", "cpe:/a:ntp:ntp:4.2.7:p41", "cpe:/a:ntp:ntp:4.2.7:p409", "cpe:/a:ntp:ntp:4.2.7:p408", "cpe:/a:ntp:ntp:4.2.7:p407", "cpe:/a:ntp:ntp:4.2.7:p406", "cpe:/a:ntp:ntp:4.2.7:p405", "cpe:/a:ntp:ntp:4.2.7:p404", "cpe:/a:ntp:ntp:4.2.7:p403", "cpe:/a:ntp:ntp:4.2.7:p402", "cpe:/a:ntp:ntp:4.2.7:p401", "cpe:/a:ntp:ntp:4.2.7:p400", "cpe:/a:ntp:ntp:4.2.7:p40", "cpe:/a:ntp:ntp:4.2.7:p4", "cpe:/a:ntp:ntp:4.2.7:p399", "cpe:/a:ntp:ntp:4.2.7:p398", "cpe:/a:ntp:ntp:4.2.7:p397", "cpe:/a:ntp:ntp:4.2.7:p396", "cpe:/a:ntp:ntp:4.2.7:p395", "cpe:/a:ntp:ntp:4.2.7:p394", "cpe:/a:ntp:ntp:4.2.7:p393", "cpe:/a:ntp:ntp:4.2.7:p392", "cpe:/a:ntp:ntp:4.2.7:p391", "cpe:/a:ntp:ntp:4.2.7:p390", "cpe:/a:ntp:ntp:4.2.7:p39", "cpe:/a:ntp:ntp:4.2.7:p389", "cpe:/a:ntp:ntp:4.2.7:p388", "cpe:/a:ntp:ntp:4.2.7:p387", "cpe:/a:ntp:ntp:4.2.7:p386", "cpe:/a:ntp:ntp:4.2.7:p385", "cpe:/a:ntp:ntp:4.2.7:p384", "cpe:/a:ntp:ntp:4.2.7:p383", "cpe:/a:ntp:ntp:4.2.7:p382", "cpe:/a:ntp:ntp:4.2.7:p381", "cpe:/a:ntp:ntp:4.2.7:p380", "cpe:/a:ntp:ntp:4.2.7:p38", "cpe:/a:ntp:ntp:4.2.7:p379", "cpe:/a:ntp:ntp:4.2.7:p378", "cpe:/a:ntp:ntp:4.2.7:p377", "cpe:/a:ntp:ntp:4.2.7:p376", "cpe:/a:ntp:ntp:4.2.7:p375", "cpe:/a:ntp:ntp:4.2.7:p374", "cpe:/a:ntp:ntp:4.2.7:p373", "cpe:/a:ntp:ntp:4.2.7:p372", "cpe:/a:ntp:ntp:4.2.7:p371", "cpe:/a:ntp:ntp:4.2.7:p370", "cpe:/a:ntp:ntp:4.2.7:p37", "cpe:/a:ntp:ntp:4.2.7:p369", "cpe:/a:ntp:ntp:4.2.7:p368", "cpe:/a:ntp:ntp:4.2.7:p367", "cpe:/a:ntp:ntp:4.2.7:p366", "cpe:/a:ntp:ntp:4.2.7:p365", "cpe:/a:ntp:ntp:4.2.7:p364", "cpe:/a:ntp:ntp:4.2.7:p363", "cpe:/a:ntp:ntp:4.2.7:p362", "cpe:/a:ntp:ntp:4.2.7:p361", "cpe:/a:ntp:ntp:4.2.7:p360", "cpe:/a:ntp:ntp:4.2.7:p36", "cpe:/a:ntp:ntp:4.2.7:p359", "cpe:/a:ntp:ntp:4.2.7:p358", "cpe:/a:ntp:ntp:4.2.7:p357", "cpe:/a:ntp:ntp:4.2.7:p356", "cpe:/a:ntp:ntp:4.2.7:p355", "cpe:/a:ntp:ntp:4.2.7:p354", "cpe:/a:ntp:ntp:4.2.7:p353", "cpe:/a:ntp:ntp:4.2.7:p352", "cpe:/a:ntp:ntp:4.2.7:p351", "cpe:/a:ntp:ntp:4.2.7:p350", "cpe:/a:ntp:ntp:4.2.7:p35", "cpe:/a:ntp:ntp:4.2.7:p349", "cpe:/a:ntp:ntp:4.2.7:p348", "cpe:/a:ntp:ntp:4.2.7:p347", "cpe:/a:ntp:ntp:4.2.7:p346", "cpe:/a:ntp:ntp:4.2.7:p345", "cpe:/a:ntp:ntp:4.2.7:p344", "cpe:/a:ntp:ntp:4.2.7:p343", "cpe:/a:ntp:ntp:4.2.7:p342", "cpe:/a:ntp:ntp:4.2.7:p341", "cpe:/a:ntp:ntp:4.2.7:p340", "cpe:/a:ntp:ntp:4.2.7:p34", "cpe:/a:ntp:ntp:4.2.7:p339", "cpe:/a:ntp:ntp:4.2.7:p338", "cpe:/a:ntp:ntp:4.2.7:p337", "cpe:/a:ntp:ntp:4.2.7:p336", "cpe:/a:ntp:ntp:4.2.7:p335", "cpe:/a:ntp:ntp:4.2.7:p334", "cpe:/a:ntp:ntp:4.2.7:p333", "cpe:/a:ntp:ntp:4.2.7:p332", "cpe:/a:ntp:ntp:4.2.7:p331", "cpe:/a:ntp:ntp:4.2.7:p330", "cpe:/a:ntp:ntp:4.2.7:p33", "cpe:/a:ntp:ntp:4.2.7:p329", "cpe:/a:ntp:ntp:4.2.7:p328", "cpe:/a:ntp:ntp:4.2.7:p327", "cpe:/a:ntp:ntp:4.2.7:p326", "cpe:/a:ntp:ntp:4.2.7:p325", "cpe:/a:ntp:ntp:4.2.7:p324", "cpe:/a:ntp:ntp:4.2.7:p323", "cpe:/a:ntp:ntp:4.2.7:p322", "cpe:/a:ntp:ntp:4.2.7:p321", "cpe:/a:ntp:ntp:4.2.7:p320", "cpe:/a:ntp:ntp:4.2.7:p32", "cpe:/a:ntp:ntp:4.2.7:p319", "cpe:/a:ntp:ntp:4.2.7:p318", "cpe:/a:ntp:ntp:4.2.7:p317", "cpe:/a:ntp:ntp:4.2.7:p316", "cpe:/a:ntp:ntp:4.2.7:p315", "cpe:/a:ntp:ntp:4.2.7:p314", "cpe:/a:ntp:ntp:4.2.7:p313", "cpe:/a:ntp:ntp:4.2.7:p312", "cpe:/a:ntp:ntp:4.2.7:p311", "cpe:/a:ntp:ntp:4.2.7:p310", "cpe:/a:ntp:ntp:4.2.7:p31", "cpe:/a:ntp:ntp:4.2.7:p309", "cpe:/a:ntp:ntp:4.2.7:p308", "cpe:/a:ntp:ntp:4.2.7:p307", "cpe:/a:ntp:ntp:4.2.7:p306", "cpe:/a:ntp:ntp:4.2.7:p305", "cpe:/a:ntp:ntp:4.2.7:p304", "cpe:/a:ntp:ntp:4.2.7:p303", "cpe:/a:ntp:ntp:4.2.7:p302", "cpe:/a:ntp:ntp:4.2.7:p301", "cpe:/a:ntp:ntp:4.2.7:p300", "cpe:/a:ntp:ntp:4.2.7:p30", "cpe:/a:ntp:ntp:4.2.7:p3", "cpe:/a:ntp:ntp:4.2.7:p299", "cpe:/a:ntp:ntp:4.2.7:p298", "cpe:/a:ntp:ntp:4.2.7:p297", "cpe:/a:ntp:ntp:4.2.7:p296", "cpe:/a:ntp:ntp:4.2.7:p295", "cpe:/a:ntp:ntp:4.2.7:p294", "cpe:/a:ntp:ntp:4.2.7:p293", "cpe:/a:ntp:ntp:4.2.7:p292", "cpe:/a:ntp:ntp:4.2.7:p291", "cpe:/a:ntp:ntp:4.2.7:p290", "cpe:/a:ntp:ntp:4.2.7:p29", "cpe:/a:ntp:ntp:4.2.7:p289", "cpe:/a:ntp:ntp:4.2.7:p288", "cpe:/a:ntp:ntp:4.2.7:p287", "cpe:/a:ntp:ntp:4.2.7:p286", "cpe:/a:ntp:ntp:4.2.7:p285", "cpe:/a:ntp:ntp:4.2.7:p284", "cpe:/a:ntp:ntp:4.2.7:p283", "cpe:/a:ntp:ntp:4.2.7:p282", "cpe:/a:ntp:ntp:4.2.7:p281", "cpe:/a:ntp:ntp:4.2.7:p280", "cpe:/a:ntp:ntp:4.2.7:p28", "cpe:/a:ntp:ntp:4.2.7:p279", "cpe:/a:ntp:ntp:4.2.7:p278", "cpe:/a:ntp:ntp:4.2.7:p277", "cpe:/a:ntp:ntp:4.2.7:p276", "cpe:/a:ntp:ntp:4.2.7:p275", "cpe:/a:ntp:ntp:4.2.7:p274", "cpe:/a:ntp:ntp:4.2.7:p273", "cpe:/a:ntp:ntp:4.2.7:p272", "cpe:/a:ntp:ntp:4.2.7:p271", "cpe:/a:ntp:ntp:4.2.7:p270", "cpe:/a:ntp:ntp:4.2.7:p27", "cpe:/a:ntp:ntp:4.2.7:p269", "cpe:/a:ntp:ntp:4.2.7:p268", "cpe:/a:ntp:ntp:4.2.7:p267", "cpe:/a:ntp:ntp:4.2.7:p266", "cpe:/a:ntp:ntp:4.2.7:p265", "cpe:/a:ntp:ntp:4.2.7:p264", "cpe:/a:ntp:ntp:4.2.7:p263", "cpe:/a:ntp:ntp:4.2.7:p262", "cpe:/a:ntp:ntp:4.2.7:p261", "cpe:/a:ntp:ntp:4.2.7:p260", "cpe:/a:ntp:ntp:4.2.7:p26", "cpe:/a:ntp:ntp:4.2.7:p259", "cpe:/a:ntp:ntp:4.2.7:p258", "cpe:/a:ntp:ntp:4.2.7:p257", "cpe:/a:ntp:ntp:4.2.7:p256", "cpe:/a:ntp:ntp:4.2.7:p255", "cpe:/a:ntp:ntp:4.2.7:p254", "cpe:/a:ntp:ntp:4.2.7:p253", "cpe:/a:ntp:ntp:4.2.7:p252", "cpe:/a:ntp:ntp:4.2.7:p251", "cpe:/a:ntp:ntp:4.2.7:p250", "cpe:/a:ntp:ntp:4.2.7:p25", "cpe:/a:ntp:ntp:4.2.7:p249", "cpe:/a:ntp:ntp:4.2.7:p248", "cpe:/a:ntp:ntp:4.2.7:p247", "cpe:/a:ntp:ntp:4.2.7:p246", "cpe:/a:ntp:ntp:4.2.7:p245", "cpe:/a:ntp:ntp:4.2.7:p244", "cpe:/a:ntp:ntp:4.2.7:p243", "cpe:/a:ntp:ntp:4.2.7:p242", "cpe:/a:ntp:ntp:4.2.7:p241", "cpe:/a:ntp:ntp:4.2.7:p240", "cpe:/a:ntp:ntp:4.2.7:p24", "cpe:/a:ntp:ntp:4.2.7:p239", "cpe:/a:ntp:ntp:4.2.7:p238", "cpe:/a:ntp:ntp:4.2.7:p237", "cpe:/a:ntp:ntp:4.2.7:p236", "cpe:/a:ntp:ntp:4.2.7:p235", "cpe:/a:ntp:ntp:4.2.7:p234", "cpe:/a:ntp:ntp:4.2.7:p233", "cpe:/a:ntp:ntp:4.2.7:p232", "cpe:/a:ntp:ntp:4.2.7:p231", "cpe:/a:ntp:ntp:4.2.7:p230", "cpe:/a:ntp:ntp:4.2.7:p23", "cpe:/a:ntp:ntp:4.2.7:p229", "cpe:/a:ntp:ntp:4.2.7:p228", "cpe:/a:ntp:ntp:4.2.7:p227", "cpe:/a:ntp:ntp:4.2.7:p226", "cpe:/a:ntp:ntp:4.2.7:p225", "cpe:/a:ntp:ntp:4.2.7:p224", "cpe:/a:ntp:ntp:4.2.7:p223", "cpe:/a:ntp:ntp:4.2.7:p222", "cpe:/a:ntp:ntp:4.2.7:p221", "cpe:/a:ntp:ntp:4.2.7:p220", "cpe:/a:ntp:ntp:4.2.7:p22", "cpe:/a:ntp:ntp:4.2.7:p219", "cpe:/a:ntp:ntp:4.2.7:p218", "cpe:/a:ntp:ntp:4.2.7:p217", "cpe:/a:ntp:ntp:4.2.7:p216", "cpe:/a:ntp:ntp:4.2.7:p215", "cpe:/a:ntp:ntp:4.2.7:p214", "cpe:/a:ntp:ntp:4.2.7:p213", "cpe:/a:ntp:ntp:4.2.7:p212", "cpe:/a:ntp:ntp:4.2.7:p211", "cpe:/a:ntp:ntp:4.2.7:p210", "cpe:/a:ntp:ntp:4.2.7:p21", "cpe:/a:ntp:ntp:4.2.7:p209", "cpe:/a:ntp:ntp:4.2.7:p208", "cpe:/a:ntp:ntp:4.2.7:p207", "cpe:/a:ntp:ntp:4.2.7:p206", "cpe:/a:ntp:ntp:4.2.7:p205", "cpe:/a:ntp:ntp:4.2.7:p204", "cpe:/a:ntp:ntp:4.2.7:p203", "cpe:/a:ntp:ntp:4.2.7:p202", "cpe:/a:ntp:ntp:4.2.7:p201", "cpe:/a:ntp:ntp:4.2.7:p200", "cpe:/a:ntp:ntp:4.2.7:p20", "cpe:/a:ntp:ntp:4.2.7:p2", "cpe:/a:ntp:ntp:4.2.7:p199", "cpe:/a:ntp:ntp:4.2.7:p198", "cpe:/a:ntp:ntp:4.2.7:p197", "cpe:/a:ntp:ntp:4.2.7:p196", "cpe:/a:ntp:ntp:4.2.7:p195", "cpe:/a:ntp:ntp:4.2.7:p194", "cpe:/a:ntp:ntp:4.2.7:p193", "cpe:/a:ntp:ntp:4.2.7:p192", "cpe:/a:ntp:ntp:4.2.7:p191", "cpe:/a:ntp:ntp:4.2.7:p190", "cpe:/a:ntp:ntp:4.2.7:p19", "cpe:/a:ntp:ntp:4.2.7:p189", "cpe:/a:ntp:ntp:4.2.7:p188", "cpe:/a:ntp:ntp:4.2.7:p187", "cpe:/a:ntp:ntp:4.2.7:p186", "cpe:/a:ntp:ntp:4.2.7:p185", "cpe:/a:ntp:ntp:4.2.7:p184", "cpe:/a:ntp:ntp:4.2.7:p183", "cpe:/a:ntp:ntp:4.2.7:p182", "cpe:/a:ntp:ntp:4.2.7:p181", "cpe:/a:ntp:ntp:4.2.7:p180", "cpe:/a:ntp:ntp:4.2.7:p18", "cpe:/a:ntp:ntp:4.2.7:p179", "cpe:/a:ntp:ntp:4.2.7:p178", "cpe:/a:ntp:ntp:4.2.7:p177", "cpe:/a:ntp:ntp:4.2.7:p176", "cpe:/a:ntp:ntp:4.2.7:p175", "cpe:/a:ntp:ntp:4.2.7:p174", "cpe:/a:ntp:ntp:4.2.7:p173", "cpe:/a:ntp:ntp:4.2.7:p172", "cpe:/a:ntp:ntp:4.2.7:p171", "cpe:/a:ntp:ntp:4.2.7:p170", "cpe:/a:ntp:ntp:4.2.7:p17", "cpe:/a:ntp:ntp:4.2.7:p166", "cpe:/a:ntp:ntp:4.2.7:p165", "cpe:/a:ntp:ntp:4.2.7:p164", "cpe:/a:ntp:ntp:4.2.7:p163", "cpe:/a:ntp:ntp:4.2.7:p162", "cpe:/a:ntp:ntp:4.2.7:p161", "cpe:/a:ntp:ntp:4.2.7:p160", "cpe:/a:ntp:ntp:4.2.7:p16", "cpe:/a:ntp:ntp:4.2.7:p159", "cpe:/a:ntp:ntp:4.2.7:p158", "cpe:/a:ntp:ntp:4.2.7:p157", "cpe:/a:ntp:ntp:4.2.7:p156", "cpe:/a:ntp:ntp:4.2.7:p155", "cpe:/a:ntp:ntp:4.2.7:p154", "cpe:/a:ntp:ntp:4.2.7:p153", "cpe:/a:ntp:ntp:4.2.7:p152", "cpe:/a:ntp:ntp:4.2.7:p151", "cpe:/a:ntp:ntp:4.2.7:p150", "cpe:/a:ntp:ntp:4.2.7:p15", "cpe:/a:ntp:ntp:4.2.7:p149", "cpe:/a:ntp:ntp:4.2.7:p148", "cpe:/a:ntp:ntp:4.2.7:p147", "cpe:/a:ntp:ntp:4.2.7:p146", "cpe:/a:ntp:ntp:4.2.7:p145", "cpe:/a:ntp:ntp:4.2.7:p144", "cpe:/a:ntp:ntp:4.2.7:p143", "cpe:/a:ntp:ntp:4.2.7:p142", "cpe:/a:ntp:ntp:4.2.7:p141", "cpe:/a:ntp:ntp:4.2.7:p140", "cpe:/a:ntp:ntp:4.2.7:p14", "cpe:/a:ntp:ntp:4.2.7:p139", "cpe:/a:ntp:ntp:4.2.7:p138", "cpe:/a:ntp:ntp:4.2.7:p137", "cpe:/a:ntp:ntp:4.2.7:p136", "cpe:/a:ntp:ntp:4.2.7:p135", "cpe:/a:ntp:ntp:4.2.7:p134", "cpe:/a:ntp:ntp:4.2.7:p133", "cpe:/a:ntp:ntp:4.2.7:p132", "cpe:/a:ntp:ntp:4.2.7:p131", "cpe:/a:ntp:ntp:4.2.7:p130", "cpe:/a:ntp:ntp:4.2.7:p13", "cpe:/a:ntp:ntp:4.2.7:p129", "cpe:/a:ntp:ntp:4.2.7:p128", "cpe:/a:ntp:ntp:4.2.7:p127", "cpe:/a:ntp:ntp:4.2.7:p126", "cpe:/a:ntp:ntp:4.2.7:p125", "cpe:/a:ntp:ntp:4.2.7:p124", "cpe:/a:ntp:ntp:4.2.7:p123", "cpe:/a:ntp:ntp:4.2.7:p122", "cpe:/a:ntp:ntp:4.2.7:p121", "cpe:/a:ntp:ntp:4.2.7:p120", "cpe:/a:ntp:ntp:4.2.7:p12", "cpe:/a:ntp:ntp:4.2.7:p119", "cpe:/a:ntp:ntp:4.2.7:p118", "cpe:/a:ntp:ntp:4.2.7:p117", "cpe:/a:ntp:ntp:4.2.7:p116", "cpe:/a:ntp:ntp:4.2.7:p115", "cpe:/a:ntp:ntp:4.2.7:p114", "cpe:/a:ntp:ntp:4.2.7:p113", "cpe:/a:ntp:ntp:4.2.7:p112", "cpe:/a:ntp:ntp:4.2.7:p111", "cpe:/a:ntp:ntp:4.2.7:p110", "cpe:/a:ntp:ntp:4.2.7:p11", "cpe:/a:ntp:ntp:4.2.7:p109", "cpe:/a:ntp:ntp:4.2.7:p108", "cpe:/a:ntp:ntp:4.2.7:p107", "cpe:/a:ntp:ntp:4.2.7:p106", "cpe:/a:ntp:ntp:4.2.7:p105", "cpe:/a:ntp:ntp:4.2.7:p104", "cpe:/a:ntp:ntp:4.2.7:p103", "cpe:/a:ntp:ntp:4.2.7:p102", "cpe:/a:ntp:ntp:4.2.7:p101", "cpe:/a:ntp:ntp:4.2.7:p100", "cpe:/a:ntp:ntp:4.2.7:p10", "cpe:/a:ntp:ntp:4.2.7:p1", "cpe:/a:ntp:ntp:4.2.7:p0", "cpe:/a:ntp:ntp:4.2.7", "cpe:/a:ntp:ntp:4.2.6:p5_rc3", "cpe:/a:ntp:ntp:4.2.6:p5_rc2", "cpe:/a:ntp:ntp:4.2.6:p5_rc1", "cpe:/a:ntp:ntp:4.2.6:p5", "cpe:/a:ntp:ntp:4.2.6:p4_rc2", "cpe:/a:ntp:ntp:4.2.6:p4_rc1", "cpe:/a:ntp:ntp:4.2.6:p4_beta2", "cpe:/a:ntp:ntp:4.2.6:p4_beta1", "cpe:/a:ntp:ntp:4.2.6:p4", "cpe:/a:ntp:ntp:4.2.6:p3_rc9", "cpe:/a:ntp:ntp:4.2.6:p3_rc8", "cpe:/a:ntp:ntp:4.2.6:p3_rc7", "cpe:/a:ntp:ntp:4.2.6:p3_rc6", "cpe:/a:ntp:ntp:4.2.6:p3_rc5", "cpe:/a:ntp:ntp:4.2.6:p3_rc4", "cpe:/a:ntp:ntp:4.2.6:p3_rc3", "cpe:/a:ntp:ntp:4.2.6:p3_rc2", "cpe:/a:ntp:ntp:4.2.6:p3_rc12", "cpe:/a:ntp:ntp:4.2.6:p3_rc11", "cpe:/a:ntp:ntp:4.2.6:p3_rc10", "cpe:/a:ntp:ntp:4.2.6:p3_rc1", "cpe:/a:ntp:ntp:4.2.6:p3_beta1", "cpe:/a:ntp:ntp:4.2.6:p3", "cpe:/a:ntp:ntp:4.2.6:p2_rc7", "cpe:/a:ntp:ntp:4.2.6:p2_rc6", "cpe:/a:ntp:ntp:4.2.6:p2_rc5", "cpe:/a:ntp:ntp:4.2.6:p2_rc4", "cpe:/a:ntp:ntp:4.2.6:p2_rc3", "cpe:/a:ntp:ntp:4.2.6:p2_rc2", "cpe:/a:ntp:ntp:4.2.6:p2_rc1", "cpe:/a:ntp:ntp:4.2.6:p2", "cpe:/a:ntp:ntp:4.2.6:p1_rc6", "cpe:/a:ntp:ntp:4.2.6:p1_rc5", "cpe:/a:ntp:ntp:4.2.6:p1_rc4", "cpe:/a:ntp:ntp:4.2.6:p1_rc3", "cpe:/a:ntp:ntp:4.2.6:p1_rc2", "cpe:/a:ntp:ntp:4.2.6:p1_rc1", "cpe:/a:ntp:ntp:4.2.6:p1", "cpe:/a:ntp:ntp:4.2.6", "cpe:/a:ntp:ntp:4.2.5:p250_rc1", "cpe:/a:ntp:ntp:4.2.5:p249_rc1", "cpe:/a:ntp:ntp:4.2.5:p248_rc1", "cpe:/a:ntp:ntp:4.2.5:p247_rc1", "cpe:/a:ntp:ntp:4.2.5:p246_rc1", "cpe:/a:ntp:ntp:4.2.5:p245_rc1", "cpe:/a:ntp:ntp:4.2.5:p244_rc1", "cpe:/a:ntp:ntp:4.2.5:p243_rc1", "cpe:/a:ntp:ntp:4.2.5:p242_rc1", "cpe:/a:ntp:ntp:4.2.5:p241_rc1", "cpe:/a:ntp:ntp:4.2.5:p240_rc1", "cpe:/a:ntp:ntp:4.2.5:p239_rc1", "cpe:/a:ntp:ntp:4.2.5:p238_rc1", "cpe:/a:ntp:ntp:4.2.5:p237_rc1", "cpe:/a:ntp:ntp:4.2.5:p236_rc1", "cpe:/a:ntp:ntp:4.2.5:p235_rc1", "cpe:/a:ntp:ntp:4.2.5:p234_rc1", "cpe:/a:ntp:ntp:4.2.5:p233_rc1", "cpe:/a:ntp:ntp:4.2.5:p232_rc1", "cpe:/a:ntp:ntp:4.2.5:p231_rc1", "cpe:/a:ntp:ntp:4.2.5:p230", "cpe:/a:ntp:ntp:4.2.5:p229", "cpe:/a:ntp:ntp:4.2.5:p228", "cpe:/a:ntp:ntp:4.2.5:p227", "cpe:/a:ntp:ntp:4.2.5:p226", "cpe:/a:ntp:ntp:4.2.5:p225", "cpe:/a:ntp:ntp:4.2.5:p224", "cpe:/a:ntp:ntp:4.2.5:p223", "cpe:/a:ntp:ntp:4.2.5:p222", "cpe:/a:ntp:ntp:4.2.5:p221", "cpe:/a:ntp:ntp:4.2.5:p220", "cpe:/a:ntp:ntp:4.2.5:p219", "cpe:/a:ntp:ntp:4.2.5:p218", "cpe:/a:ntp:ntp:4.2.5:p217", "cpe:/a:ntp:ntp:4.2.5:p216", "cpe:/a:ntp:ntp:4.2.5:p215", "cpe:/a:ntp:ntp:4.2.5:p214", "cpe:/a:ntp:ntp:4.2.5:p213", "cpe:/a:ntp:ntp:4.2.5:p212", "cpe:/a:ntp:ntp:4.2.5:p211", "cpe:/a:ntp:ntp:4.2.5:p210", "cpe:/a:ntp:ntp:4.2.5:p209", "cpe:/a:ntp:ntp:4.2.5:p208", "cpe:/a:ntp:ntp:4.2.5:p207", "cpe:/a:ntp:ntp:4.2.5:p206", "cpe:/a:ntp:ntp:4.2.5:p205", "cpe:/a:ntp:ntp:4.2.5:p204", "cpe:/a:ntp:ntp:4.2.5:p203", "cpe:/a:ntp:ntp:4.2.5:p202", "cpe:/a:ntp:ntp:4.2.5:p201", "cpe:/a:ntp:ntp:4.2.5:p200", "cpe:/a:ntp:ntp:4.2.5:p199", "cpe:/a:ntp:ntp:4.2.5:p198", "cpe:/a:ntp:ntp:4.2.5:p197", "cpe:/a:ntp:ntp:4.2.5:p196", "cpe:/a:ntp:ntp:4.2.5:p195", "cpe:/a:ntp:ntp:4.2.5:p194", "cpe:/a:ntp:ntp:4.2.5:p193", "cpe:/a:ntp:ntp:4.2.5:p192", "cpe:/a:ntp:ntp:4.2.5:p191", "cpe:/a:ntp:ntp:4.2.5:p190", "cpe:/a:ntp:ntp:4.2.5:p189", "cpe:/a:ntp:ntp:4.2.5:p188", "cpe:/a:ntp:ntp:4.2.5:p187", "cpe:/a:ntp:ntp:4.2.5:p186", "cpe:/a:ntp:ntp:4.2.5:p185", "cpe:/a:ntp:ntp:4.2.5:p184", "cpe:/a:ntp:ntp:4.2.5:p183", "cpe:/a:ntp:ntp:4.2.5:p182", "cpe:/a:ntp:ntp:4.2.5:p181", "cpe:/a:ntp:ntp:4.2.5:p180", "cpe:/a:ntp:ntp:4.2.5:p179", "cpe:/a:ntp:ntp:4.2.5:p178", "cpe:/a:ntp:ntp:4.2.5:p177", "cpe:/a:ntp:ntp:4.2.5:p176", "cpe:/a:ntp:ntp:4.2.5:p175", "cpe:/a:ntp:ntp:4.2.5:p174", "cpe:/a:ntp:ntp:4.2.5:p173", "cpe:/a:ntp:ntp:4.2.5:p172", "cpe:/a:ntp:ntp:4.2.5:p171", "cpe:/a:ntp:ntp:4.2.5:p170", "cpe:/a:ntp:ntp:4.2.5:p169", "cpe:/a:ntp:ntp:4.2.5:p168", "cpe:/a:ntp:ntp:4.2.5:p167", "cpe:/a:ntp:ntp:4.2.5:p166", "cpe:/a:ntp:ntp:4.2.5:p165", "cpe:/a:ntp:ntp:4.2.5:p164", "cpe:/a:ntp:ntp:4.2.5:p163", "cpe:/a:ntp:ntp:4.2.5:p162", "cpe:/a:ntp:ntp:4.2.5:p161", "cpe:/a:ntp:ntp:4.2.5:p160", "cpe:/a:ntp:ntp:4.2.5:p159", "cpe:/a:ntp:ntp:4.2.5:p158", "cpe:/a:ntp:ntp:4.2.5:p157", "cpe:/a:ntp:ntp:4.2.5:p156", "cpe:/a:ntp:ntp:4.2.5:p155", "cpe:/a:ntp:ntp:4.2.5:p154", "cpe:/a:ntp:ntp:4.2.5:p153", "cpe:/a:ntp:ntp:4.2.5:p152", "cpe:/a:ntp:ntp:4.2.5:p151", "cpe:/a:ntp:ntp:4.2.5:p150", "cpe:/a:ntp:ntp:4.2.5:p149", "cpe:/a:ntp:ntp:4.2.5:p148", "cpe:/a:ntp:ntp:4.2.5:p147", "cpe:/a:ntp:ntp:4.2.5:p146", "cpe:/a:ntp:ntp:4.2.5:p145", "cpe:/a:ntp:ntp:4.2.5:p144", "cpe:/a:ntp:ntp:4.2.5:p143", "cpe:/a:ntp:ntp:4.2.5:p142", "cpe:/a:ntp:ntp:4.2.5:p141", "cpe:/a:ntp:ntp:4.2.5:p140", "cpe:/a:ntp:ntp:4.2.5:p139", "cpe:/a:ntp:ntp:4.2.5:p138", "cpe:/a:ntp:ntp:4.2.5:p137", "cpe:/a:ntp:ntp:4.2.5:p136", "cpe:/a:ntp:ntp:4.2.5:p135", "cpe:/a:ntp:ntp:4.2.5:p134", "cpe:/a:ntp:ntp:4.2.5:p133", "cpe:/a:ntp:ntp:4.2.5:p132", "cpe:/a:ntp:ntp:4.2.5:p131", "cpe:/a:ntp:ntp:4.2.5:p130", "cpe:/a:ntp:ntp:4.2.5:p129", "cpe:/a:ntp:ntp:4.2.5:p128", "cpe:/a:ntp:ntp:4.2.5:p127", "cpe:/a:ntp:ntp:4.2.5:p126", "cpe:/a:ntp:ntp:4.2.5:p125", "cpe:/a:ntp:ntp:4.2.5:p124", "cpe:/a:ntp:ntp:4.2.4:p8", "cpe:/a:ntp:ntp:4.2.4:p7_rc7", "cpe:/a:ntp:ntp:4.2.4:p7_rc6", "cpe:/a:ntp:ntp:4.2.4:p7_rc5", "cpe:/a:ntp:ntp:4.2.4:p7_rc4", "cpe:/a:ntp:ntp:4.2.4:p7_rc3", "cpe:/a:ntp:ntp:4.2.4:p7_rc2", "cpe:/a:ntp:ntp:4.2.4:p7_rc1", "cpe:/a:ntp:ntp:4.2.4:p7", "cpe:/a:ntp:ntp:4.2.4:p6", "cpe:/a:ntp:ntp:4.2.4:p5", "cpe:/a:ntp:ntp:4.2.4:p4", "cpe:/a:ntp:ntp:4.2.4:p3", "cpe:/a:ntp:ntp:4.2.4:p2", "cpe:/a:ntp:ntp:4.2.4:p1", "cpe:/a:ntp:ntp:4.2.4:p0", "cpe:/a:ntp:ntp:4.2.4", "cpe:/a:ntp:ntp:4.2.2:p4", "cpe:/a:ntp:ntp:4.2.2:p3", "cpe:/a:ntp:ntp:4.2.2:p2", "cpe:/a:ntp:ntp:4.2.2:p1", "cpe:/a:ntp:ntp:4.2.2", "cpe:/a:ntp:ntp:4.2.0", "cpe:/a:ntp:ntp:4.1.2", "cpe:/a:ntp:ntp:4.1.0", "cpe:/a:ntp:ntp:4.0.99", "cpe:/a:ntp:ntp:4.0.98", "cpe:/a:ntp:ntp:4.0.97", "cpe:/a:ntp:ntp:4.0.96", "cpe:/a:ntp:ntp:4.0.95", "cpe:/a:ntp:ntp:4.0.94", "cpe:/a:ntp:ntp:4.0.93", "cpe:/a:ntp:ntp:4.0.92", "cpe:/a:ntp:ntp:4.0.91", "cpe:/a:ntp:ntp:4.0.90", "cpe:/a:ntp:ntp:4.0.73", "cpe:/a:ntp:ntp:4.0.72"], "map_cve_certvn": {"certvuid": "VU#321640", "certvulink": "http://www.kb.cert.org/vuls/id/321640"}, "map_cve_openvas": {"openvas_script_file": "gb_suse_2016_1636_1.nasl", "openvas_script_family": "SuSE Local Security Checks", "openvas_script_id": "802813", "openvas_script_name": "SuSE Update for ntp openSUSE-SU-2016:1636-1 (ntp)"}, "map_cve_nessus": {"nessus_script_family": "SuSE Local Security Checks", "nessus_script_file": "openSUSE-2016-727.nasl", "nessus_script_id": "91630", "nessus_script_name": "openSUSE Security Update : ntp (openSUSE-2016-727)"}, "map_cve_suse": {"suseid": "openSUSE-SU-2016:1636"}, "ranking": [[{"circl": 3}], [{"circl": 2}]], "cwe": "CWE-20", "cvss": "5.0", "capec": [{"related_weakness": ["79", "80", "83", "84", "82", "348", "96", "20", "116", "184", "86", "350", "692", "697", "713", "71"], "solutions": ["Design: Use browser technologies that do not allow client side scripting.", "Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.", "Implementation: Perform input validation for all remote content.", "Implementation: Perform output validation for all remote content.", "Implementation: Disable scripting languages such as JavaScript in browser", "Implementation: Session tokens for specific host", "Implementation: Service provider should not use the XMLHttpRequest method to create a local proxy for content from other sites, because the client will not be able to discern what content comes from which host."], "id": "18", "prerequisites": ["Target client software must be a client that allows script execution based on scripts generated by remote hosts."], "summary": ["This attack is a form of Cross-Site Scripting (XSS) where malicious scripts are embedded in elements that are not expected to host scripts such as image tags (<img>), comments in XML documents (< !-CDATA->), etc. These tags may not be subject to the same input validation, output validation, and other content filtering and checking routines, so this can create an opportunity for an attacker to tunnel through the application's elements and launch a XSS attack through other elements.", "As with all remote attacks, it is important to differentiate the ability to launch an attack (such as probing an internal network for unpatched servers) and the ability of the remote attacker to collect and interpret the output of said attack."], "name": "Embedding Scripts in Non-Script Elements"}, {"related_weakness": ["20", "184", "697"], "solutions": ["Implementation: remove sensitive information such as user name and password in the SWF file.", "Implementation: use validation on both client and server side.", "Implementation: remove debug information.", "Implementation: use SSL when loading external data", "Implementation: use crossdomain.xml file to allow the application domain to load stuff or the SWF file called by other domain."], "id": "182", "prerequisites": ["The target must be capable of running Flash applications. In some cases, the victim must follow an attacker-supplied link."], "summary": ["An attacker tricks a victim to execute malicious flash content that executes commands or makes flash calls specified by the attacker. One example of this attack is cross-site flashing, an attacker controlled parameter to a reference call loads from content specified by the attacker."], "name": "Flash Injection"}, {"related_weakness": ["79", "87", "85", "20", "86", "692", "697", "713", "71"], "solutions": ["Design: Use browser technologies that do not allow client side scripting.", "Design: Utilize strict type, character, and encoding enforcement", "Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.", "Implementation: Ensure all content coming from the client is using the same encoding; if not, the server-side application must canonicalize the data before applying any filtering.", "Implementation: Perform input validation for all remote content, including remote and user-generated content", "Implementation: Perform output validation for all remote content.", "Implementation: Disable scripting languages such as JavaScript in browser", "Implementation: Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser, web servers, and plug in technologies, staying current on patch release that deal with XSS countermeasures mitigates this."], "id": "199", "prerequisites": ["Target client software must allow scripting such as JavaScript."], "summary": ["The attacker uses alternate forms of keywords or commands that result in the same action as the primary form but which may not be caught by filters. For example, many keywords are processed in a case insensitive manner. If the site's web filtering algorithm does not convert all tags into a consistent case before the comparison with forbidden keywords it is possible to bypass filters (e.g., incomplete black lists) by using an alternate case structure. For example, the \"script\" tag using the alternate forms of \"Script\" or \"ScRiPt\" may bypass filters where \"script\" is the only form tested. Other variants using different syntax representations are also possible as well as using pollution meta-characters or entities that are eventually ignored by the rendering engine. The attack can result in the execution of otherwise prohibited functionality."], "name": "Cross-Site Scripting Using Alternate Syntax"}, {"related_weakness": ["290", "287", "20", "200", "693"], "solutions": ["Design: Ensure that client process and/or message is authenticated so that anonymous communications and/or messages are not accepted by the system.", "Design: Do not rely on client validation or encoding for security purposes.", "Design: Utilize digital signatures to increase authentication assurance.", "Design: Utilize two factor authentication to increase authentication assurance.", "Implementation: Perform input validation for all remote content."], "id": "22", "prerequisites": ["Server software must rely on client side formatted and validated values, and not reinforce these checks on the server side."], "summary": ["An attack of this type exploits a programs' vulnerabilities in client/server communication channel authentication and data integrity. It leverages the implicit trust a server places in the client, or more importantly, that which the server believes is the client.", "An attacker executes this type of attack by placing themselves in the communication channel between client and server such that communication directly to the server is possible where the server believes it is communicating only with a valid client.", "There are numerous variations of this type of attack."], "name": "Exploiting Trust in Client (aka Make the Client Invisible)"}, {"related_weakness": ["112", "20", "19", "674", "770"], "solutions": ["Carefully validate and sanitize all user-controllable data prior to passing it to the XML parser routine. Ensure that the resultant data is safe to pass to the XML parser.", "Perform validation on canonical data.", "Pick a robust implementation of an XML parser.", "Validate XML against a valid schema or DTD prior to parsing."], "id": "230", "prerequisites": ["An application uses an XML parser to perform transformation on user-controllable data.", "An application does not perform sufficient validation to ensure that user-controllable data is safe for an XML parser."], "summary": ["Applications often need to transform data in and out of the XML format by using an XML parser. It may be possible for an attacker to inject data that may have an adverse effect on the XML parser when it is being processed. By nesting XML data and causing this data to be continuously self-referential, an attacker can cause the XML parser to consume more resources while processing, causing excessive memory consumption and CPU utilization. An attacker's goal is to leverage parser failure to his or her advantage. In most cases this type of an attack will result in a denial of service due to an application becoming unstable, freezing, or crash. However it may be possible to cause a crash resulting in arbitrary code execution, leading to a jump from the data plane to the control plane [R.230.1]."], "name": "XML Nested Payloads"}, {"related_weakness": ["112", "20", "19", "674", "770"], "solutions": ["Carefully validate and sanitize all user-controllable data prior to passing it to the XML parser routine. Ensure that the resultant data is safe to pass to the XML parser.", "Perform validation on canonical data.", "Pick a robust implementation of an XML parser.", "Validate XML against a valid schema or DTD prior to parsing."], "id": "231", "prerequisites": ["An application uses an XML parser to perform transformation on user-controllable data.", "An application does not perform sufficient validation to ensure that user-controllable data is safe for an XML parser."], "summary": ["Applications often need to transform data in and out of the XML format by using an XML parser. It may be possible for an attacker to inject data that may have an adverse effect on the XML parser when it is being processed. By supplying oversized payloads in input vectors that will be processed by the XML parser, an attacker can cause the XML parser to consume more resources while processing, causing excessive memory consumption and CPU utilization, and potentially cause execution of arbitrary code. An attacker's goal is to leverage parser failure to his or her advantage. In many cases this type of an attack will result in a denial of service due to an application becoming unstable, freezing, or crash. However it is possible to cause a crash resulting in arbitrary code execution, leading to a jump from the data plane to the control plane [R.231.1]."], "name": "XML Oversized Payloads"}, {"related_weakness": ["120", "119", "118", "74", "20", "680", "733", "697"], "solutions": ["Make sure that ANY failure occurring in the filtering or input validation routine is properly handled and that offending input is NOT allowed to go through. Basically make sure that the vault is closed when failure occurs.", "Pre-design: Use a language or compiler that performs automatic bounds checking.", "Pre-design through Build: Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.", "Operational: Use OS-level preventative functionality. Not a complete solution.", "Design: Use an abstraction library to abstract away risky APIs. Not a complete solution."], "id": "24", "prerequisites": ["Ability to control the length of data passed to an active filter."], "summary": ["In this attack, the idea is to cause an active filter to fail by causing an oversized transaction. An attacker may try to feed overly long input strings to the program in an attempt to overwhelm the filter (by causing a buffer overflow) and hoping that the filter does not fail securely (i.e. the user input is let into the system unfiltered)."], "name": "Filter Failure through Buffer Overflow"}, {"related_weakness": ["79", "84", "85", "20", "86", "692", "697", "713", "71"], "solutions": ["Design: Use browser technologies that do not allow client side scripting.", "Design: Utilize strict type, character, and encoding enforcement.", "Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.", "Implementation: Ensure all content coming from the client is using the same encoding; if not, the server-side application must canonicalize the data before applying any filtering.", "Implementation: Perform input validation for all remote content, including remote and user-generated content", "Implementation: Perform output validation for all remote content.", "Implementation: Disable scripting languages such as JavaScript in browser", "Implementation: Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser, web servers, and plug in technologies, staying current on patch release that deal with XSS countermeasures mitigates this."], "id": "244", "prerequisites": ["Target client software must allow scripting such as JavaScript and allows executable content delivered using a data URI scheme."], "summary": ["An attack of this type exploits the ability of most browsers to interpret \"data\", \"javascript\" or other URI schemes as client-side executable content placeholders. This attack consists of passing a malicious URI in an anchor tag HREF attribute or any other similar attributes in other HTML tags. Such malicious URI contains, for example, a base64 encoded HTML content with an embedded cross-site scripting payload. The attack is executed when the browser interprets the malicious content i.e., for example, when the victim clicks on the malicious link."], "name": "Cross-Site Scripting via Encoded URI Schemes "}, {"related_weakness": ["91", "74", "20", "390", "713", "707"], "solutions": ["Use of custom error pages - Attackers can glean information about the nature of queries from descriptive error messages. Input validation must be coupled with customized error pages that inform about an error without disclosing information about the database or application."], "id": "250", "prerequisites": ["XML queries used to process user input and retrieve information stored in XML documents", "User-controllable input not properly sanitized"], "summary": ["An attacker utilizes crafted XML user-controllable input to probe, attack, and inject data into the XML database, using techniques similar to SQL injection. The user-controllable input can allow for unauthorized viewing of data, bypassing authentication or the front-end application for direct XML database access, and possibly altering database information."], "name": "XML Injection"}, {"related_weakness": ["471", "20"], "solutions": ["Design: Ensure that variables that should not be manipulated by a user are not accessible to them."], "id": "264", "prerequisites": ["The targeted application must rely on external variables in such a way that malicious manipulation of them can subvert functionality."], "summary": ["An attacker manipulates environment variables used by an application to perform a variety of possible attacks. Changing variable values is usually undertaken as part of another attack; for example, a path traversal (inserting relative path modifiers) or buffer overflow (enlarging a variable value beyond an application's ability to store it)."], "name": "Environment Variable Manipulation"}, {"related_weakness": ["471", "20"], "solutions": ["Design: Range, size and value and consistency verification for any arguments supplied to application from external sources and devise appropriate error response.", "Design: Ensure that variables that should not be manipulated by a user are not accessible to them."], "id": "265", "prerequisites": ["The targeted application must rely on external variables in such a way that malicious manipulation of them can subvert functionality."], "summary": ["An attacker manipulates global variables used by an application to perform a variety of possible attacks. Changing variable values is usually undertaken as part of another attack; for example, a path traversal (inserting relative path modifiers) or buffer overflow (enlarging a variable value beyond an application's ability to store it)."], "name": "Global variable manipulation"}, {"related_weakness": ["173", "172", "180", "181", "171", "73", "21", "74", "20", "697", "692"], "solutions": ["Assume all input might use an improper representation. Use canonicalized data inside the application; all data must be converted into the representation used inside the application (UTF-8, UTF-16, etc.)", "Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system. Test your decoding process against malicious input."], "id": "267", "prerequisites": ["The application's decoder accepts and interprets encoded characters. Data canonicalization, input filtering and validating is not done properly leaving the door open to harmful characters for the target host."], "summary": ["This attack leverages the possibility to encode potentially harmful input and submit it to applications not expecting or effective at validating this encoding standard making input filtering difficult."], "name": "Leverage Alternate Encoding"}, {"related_weakness": ["74", "388", "20", "728"], "solutions": ["Test to ensure that the software behaves as per specification and that there are no unintended side effects. Ensure that no assumptions about the validity of data are made.", "Use fuzz testing during the software QA process to uncover any surprises, uncover any assumptions or unexpected behavior."], "id": "28", "prerequisites": [], "summary": ["Fuzzing is a software testing method that feeds randomly constructed input to the system and looks for an indication that a failure in response to that input has occurred. Fuzzing treats the system as a black box and is totally free from any preconceptions or assumptions about the system.", "An attacker can leverage fuzzing to try to identify weaknesses in the system. For instance fuzzing can help an attacker discover certain assumptions made in the system about user input. Fuzzing gives an attacker a quick way of potentially uncovering some of these assumptions without really knowing anything about the internals of the system. These assumptions can then be turned against the system by specially crafting user input that may allow an attacker to achieve his goals."], "name": "Fuzzing"}, {"related_weakness": ["173", "41", "172", "171", "179", "180", "181", "183", "184", "20", "74", "697", "707"], "solutions": ["Perform white list rather than black list input validation.", "Canonicalize all data prior to validation.", "Take an iterative approach to input validation (defense in depth)."], "id": "3", "prerequisites": ["The targeted API must ignore the leading ghost characters that are used to get past the filters for the semantics to be the same."], "summary": ["An attacker intentionally introduces leading characters that enable getting the input past the filters. The API that is being targeted, ignores the leading \"ghost\" characters, and therefore processes the attackers' input. This occurs when the targeted API will accept input data in several syntactic forms and interpret it in the equivalent semantic way, while the filter does not take into account the full spectrum of the syntactic forms acceptable to the targeted API.", "Some APIs will strip certain leading characters from a string of parameters. Perhaps these characters are considered redundant, and for this reason they are removed. Another possibility is the parser logic at the beginning of analysis is specialized in some way that causes some characters to be removed. The attacker can specify multiple types of alternative encodings at the beginning of a string as a set of probes.", "One commonly used possibility involves adding ghost characters--extra characters that don't affect the validity of the request at the API layer. If the attacker has access to the API libraries being targeted, certain attack ideas can be tested directly in advance. Once alternative ghost encodings emerge through testing, the attacker can move from lab-based API testing to testing real-world service implementations."], "name": "Using Leading 'Ghost' Character Sequences to Bypass Input Filters"}, {"related_weakness": ["565", "302", "311", "113", "539", "20", "315", "384", "472", "724", "602", "642"], "solutions": ["Design: Use input validation for cookies", "Design: Generate and validate MAC for cookies", "Implementation: Use SSL/TLS to protect cookie in transit", "Implementation: Ensure the web server implements all relevant security patches, many exploitable buffer overflows are fixed in patches issued for the software."], "id": "31", "prerequisites": ["Target server software must be a HTTP daemon that relies on cookies."], "summary": ["This attack relies on the use of HTTP Cookies to store credentials, state information and other critical data on client systems.", "The first form of this attack involves accessing HTTP Cookies to mine for potentially sensitive data contained therein.", "The second form of this attack involves intercepting this data as it is transmitted from client to server. This intercepted information is then used by the attacker to impersonate the remote user/session.", "The third form is when the cookie's content is modified by the attacker before it is sent back to the server. Here the attacker seeks to convince the target server to operate on this falsified information."], "name": "Accessing/Intercepting/Modifying HTTP Cookies"}, {"related_weakness": ["79", "84", "85", "20", "86", "692", "697", "713", "71"], "solutions": ["Design: Use browser technologies that do not allow client side scripting.", "Design: Utilize strict type, character, and encoding enforcement", "Design: Server side developers should not proxy content via XHR or other means, if a http proxy for remote content is setup on the server side, the client's browser has no way of discerning where the data is originating from.", "Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.", "Implementation: Perform input validation for all remote content, including remote and user-generated content", "Implementation: Perform output validation for all remote content.", "Implementation: Disable scripting languages such as JavaScript in browser", "Implementation: Session tokens for specific host", "Implementation: Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser, web servers, and plug in technologies, staying current on patch release that deal with XSS countermeasures mitigates this.", "Implementation: Privileges are constrained, if a script is loaded, ensure system runs in chroot jail or other limited authority mode"], "id": "32", "prerequisites": ["Target client software must allow scripting such as JavaScript. Server software must allow display of remote generated HTML without sufficient input or output validation."], "summary": ["A variant of cross-site scripting called \"reflected\" cross-site scripting, the HTTP Query Strings attack consists of passing a malicious script inside an otherwise valid HTTP request query string. This is of significant concern for sites that rely on dynamic, user-generated content such as bulletin boards, news sites, blogs, and web enabled administration GUIs. The malicious script may steal session data, browse history, probe files, or otherwise execute attacks on the client side. Once the attacker has prepared the malicious HTTP query it is sent to a victim user (perhaps by email, IM, or posted on an online forum), who clicks on a normal looking link that contains a poison query string. This technique can be made more effective through the use of services like http://tinyurl.com/, which makes very small URLs that will redirect to very large, complex ones. The victim will not know what he is really clicking on."], "name": "Embedding Scripts in HTTP Query Strings"}, {"related_weakness": ["120", "119", "74", "20"], "solutions": ["Stay up to date with third party vendor patches", "From \"Exploiting Software\", please see reference below.", "Use the sendmail restricted shell program (smrsh)", "Use mail.local"], "id": "42", "prerequisites": ["The target system uses a mail server.", "Mail server vendor has not released a patch for the MIME conversion routine, the patch itself has a security hole or does not fix the original problem, or the patch has not been applied to the user's system."], "summary": ["An attacker exploits a weakness in the MIME conversion routine to cause a buffer overflow and gain control over the mail server machine. The MIME system is designed to allow various different information formats to be interpreted and sent via e-mail. Attack points exist when data are converted to MIME compatible format and back."], "name": "MIME Conversion"}, {"related_weakness": ["171", "179", "181", "184", "183", "77", "78", "74", "20", "697", "707"], "solutions": ["An iterative approach to input validation may be required to ensure that no dangerous characters are present. It may be necessary to implement redundant checking across different input validation layers. Ensure that invalid data is rejected as soon as possible and do not continue to work with it.", "Make sure to perform input validation on canonicalized data (i.e. data that is data in its most standard form). This will help avoid tricky encodings getting past the filters.", "Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system."], "id": "43", "prerequisites": ["User input is used to construct a command to be executed on the target system or as part of the file name.", "Multiple parser passes are performed on the data supplied by the user."], "summary": ["An attacker supplies the target software with input data that contains sequences of special characters designed to bypass input validation logic. This exploit relies on the target making multiples passes over the input data and processing a \"layer\" of special characters with each pass. In this manner, the attacker can disguise input that would otherwise be rejected as invalid by concealing it with layers of special/escape characters that are stripped off by subsequent processing steps.", "The goal is to first discover cases where the input validation layer executes before one or more parsing layers. That is, user input may go through the following logic in an application:", "In such cases, the attacker will need to provide input that will pass through the input validator, but after passing through parser2, will be converted into something that the input validator was supposed to stop."], "name": "Exploiting Multiple Input Interpretation Layers"}, {"related_weakness": ["120", "285", "302", "118", "119", "74", "20", "680", "697"], "solutions": ["Pay attention to the fact that the resource you read from can be a replaced by a Symbolic link. You can do a Symlink check before reading the file and decide that this is not a legitimate way of accessing the resource.", "Because Symlink can be modified by an attacker, make sure that the ones you read are located in protected directories.", "Pay attention to the resource pointed to by your symlink links (See attack pattern named \"Forced Symlink race\"), they can be replaced by malicious resources.", "Always check the size of the input data before copying to a buffer.", "Use a language or compiler that performs automatic bounds checking.", "Use an abstraction library to abstract away risky APIs. Not a complete solution.", "Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.", "Use OS-level preventative functionality. Not a complete solution."], "id": "45", "prerequisites": ["The attacker can create symbolic link on the target host.", "The target host does not perform correct boundary checking while consuming data from a resources."], "summary": ["This type of attack leverages the use of symbolic links to cause buffer overflows. An attacker can try to create or manipulate a symbolic link file such that its contents result in out of bounds data. When the target software processes the symbolic link file, it could potentially overflow internal buffers with insufficient bounds checking."], "name": "Buffer Overflow via Symbolic Links"}, {"related_weakness": ["120", "118", "119", "74", "20", "680", "733", "697"], "solutions": ["Use a language or compiler that performs automatic bounds checking.", "Use an abstraction library to abstract away risky APIs. Not a complete solution.", "Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.", "Use OS-level preventative functionality. Not a complete solution.", "Do not trust input data from user. Validate all user input."], "id": "46", "prerequisites": ["The target program consumes user-controllable data in the form of tags or variables.", "The target program does not perform sufficient boundary checking."], "summary": ["This type of attack leverages the use of tags or variables from a formatted configuration data to cause buffer overflow. The attacker crafts a malicious HTML page or configuration file that includes oversized strings, thus causing an overflow."], "name": "Overflow Variables and Tags"}, {"related_weakness": ["120", "119", "118", "130", "131", "74", "20", "680", "697"], "solutions": ["Ensure that when parameter expansion happens in the code that the assumptions used to determine the resulting size of the parameter are accurate and that the new size of the parameter is visible to the whole system"], "id": "47", "prerequisites": ["The program expands one of the parameters passed to a function with input controlled by the user, but a later function making use of the expanded parameter erroneously considers the original, not the expanded size of the parameter.", "The expanded parameter is used in the context where buffer overflow may become possible due to the incorrect understanding of the parameter size (i.e. thinking that it is smaller than it really is)."], "summary": ["In this attack, the target software is given input that the attacker knows will be modified and expanded in size during processing. This attack relies on the target software failing to anticipate that the expanded data may exceed some internal limit, thereby creating a buffer overflow."], "name": "Buffer Overflow via Parameter Expansion"}, {"related_weakness": ["20", "327", "290"], "solutions": [], "id": "473", "prerequisites": ["The victim or victim system is dependent upon a cryptographic signature-based verification system for validation of one or more security events or actions.", "The validation can be bypassed via an attacker-provided signature that makes it appear that the legitimate authoritative or reputable source provided the signature."], "summary": ["An attacker generates a message or datablock that causes the recipient to believe that the message or datablock was generated and cryptographically signed by an authoritative or reputable source, misleading a victim or victim operating system into performing malicious actions."], "name": "Signature Spoof"}, {"related_weakness": ["112", "20", "19"], "solutions": ["Carefully validate and sanitize all user-controllable data prior to passing it to the XML parser routine. Ensure that the resultant data is safe to pass to the XML parser.", "The client software should have the latest patches and should be audited for vulnerabilities before being used to communicate with potentially hostile servers."], "id": "484", "prerequisites": ["An application uses an XML parser to perform transformation on user-controllable data.", "An application does not perform sufficient validation to ensure that user-controllable data is safe for an XML parser."], "summary": ["Client applications such as web browsers that process HTML data often need to transform data in and out of the XML format by using an XML parser. It may be possible for an attacker to inject data that may have an adverse effect on the XML parser when it is being processed. These adverse effects may include the parser crashing, consuming too much of a resource, executing too slowly, executing code supplied by an attacker, allowing usage of unintended system functionality, etc. An attacker's goal is to leverage parser failure to his or her advantage. In some cases it may be possible to jump from the data plane to the control plane via bad data being passed to an XML parser. [R.484.1]"], "name": "XML Client-Side Attack"}, {"related_weakness": ["158", "172", "173", "171", "74", "20", "697", "707"], "solutions": ["Properly handle the NULL characters supplied as part of user input prior to doing anything with the data."], "id": "52", "prerequisites": ["The program does not properly handle postfix NULL terminators"], "summary": ["An attacker embeds one or more null bytes in input to the target software. This attack relies on the usage of a null-valued byte as a string terminator in many environments. The goal is for certain components of the target software to stop processing the input when it encounters the null byte(s)."], "name": "Embedding NULL Bytes"}, {"related_weakness": ["158", "172", "173", "171", "74", "20", "697", "707"], "solutions": ["Properly handle Null characters. Make sure canonicalization is properly applied. Do not pass Null characters to the underlying APIs.", "Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system."], "id": "53", "prerequisites": ["Null terminators are not properly handled by the filter."], "summary": ["If a string is passed through a filter of some kind, then a terminal NULL may not be valid. Using alternate representation of NULL allows an attacker to embed the NULL mid-string while postfixing the proper data so that the filter is avoided. One example is a filter that looks for a trailing slash character. If a string insertion is possible, but the slash must exist, an alternate encoding of NULL in mid-string may be used."], "name": "Postfix, Null Terminate, and Backslash"}, {"related_weakness": ["79", "20", "184", "96", "113", "348", "116", "350", "86", "602", "692", "697", "713", "71"], "solutions": ["Design: Use browser technologies that do not allow client side scripting.", "Design: Utilize strict type, character, and encoding enforcement", "Design: Server side developers should not proxy content via XHR or other means, if a http proxy for remote content is setup on the server side, the client's browser has no way of discerning where the data is originating from.", "Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.", "Implementation: Perform input validation for all remote content.", "Implementation: Perform output validation for all remote content.", "Implementation: Session tokens for specific host", "Implementation: Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser, web servers, and plug in technologies, staying current on patch release that deal with XSS countermeasures mitigates this."], "id": "63", "prerequisites": ["Target client software must be a client that allows scripting communication from remote hosts, such as a JavaScript-enabled Web Browser"], "summary": ["An attacker embeds malicious scripts in content that will be served to web browsers. The goal of the attack is for the target software, the client-side browser, to execute the script with the users' privilege level.", "An attack of this type exploits a programs' vulnerabilities that are brought on by allowing remote hosts to execute code and scripts. Web browsers, for example, have some simple security controls in place, but if a remote attacker is allowed to execute scripts (through injecting them in to user-generated content like bulletin boards) then these controls may be bypassed. Further, these attacks are very difficult for an end user to detect."], "name": "Simple Script Injection"}, {"related_weakness": ["177", "171", "173", "172", "73", "21", "22", "74", "20", "697", "707"], "solutions": ["Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system. Test your decoding process against malicious input.", "Be aware of the threat of alternative method of data encoding and obfuscation technique such as IP address encoding.", "When client input is required from web-based forms, avoid using the \"GET\" method to submit data, as the method causes the form data to be appended to the URL and is easily manipulated. Instead, use the \"POST method whenever possible.", "Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process.", "Refer to the RFCs to safely decode URL.", "Regular expression can be used to match safe URL patterns. However, that may discard valid URL requests if the regular expression is too restrictive.", "There are tools to scan HTTP requests to the server for valid URL such as URLScan from Microsoft (http://www.microsoft.com/technet/security/tools/urlscan.mspx)."], "id": "64", "prerequisites": ["The application accepts and decodes URL string request.", "The application performs insufficient filtering/canonicalization on the URLs."], "summary": ["This attack targets the encoding of the URL combined with the encoding of the slash characters. An attacker can take advantage of the multiple way of encoding an URL and abuse the interpretation of the URL. An URL may contain special character that need special syntax handling in order to be interpreted. Special characters are represented using a percentage character followed by two digits representing the octet code of the original character (%HEX-CODE). For instance US-ASCII space character would be represented with %20. This is often referred as escaped ending or percent-encoding. Since the server decodes the URL from the requests, it may restrict the access to some URL paths by validating and filtering out the URL requests it received. An attacker will try to craft an URL with a sequence of special characters which once interpreted by the server will be equivalent to a forbidden URL. It can be difficult to protect against this attack since the URL can contain other format of encoding such as UTF-8 encoding, Unicode-encoding, etc."], "name": "Using Slashes and URL Encoding Combined to Bypass Validation Logic"}, {"related_weakness": ["89", "74", "20", "390", "697", "713", "707"], "solutions": ["Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as SQL content. Keywords such as UNION, SELECT or INSERT must be filtered in addition to characters such as a single-quote(') or SQL-comments (--) based on the context in which they appear.", "Use of parameterized queries or stored procedures - Parameterization causes the input to be restricted to certain domains, such as strings or integers, and any input outside such domains is considered invalid and the query fails. Note that SQL Injection is possible even in the presence of stored procedures if the eventual query is constructed dynamically.", "Use of custom error pages - Attackers can glean information about the nature of queries from descriptive error messages. Input validation must be coupled with customized error pages that inform about an error without disclosing information about the database or application."], "id": "66", "prerequisites": ["SQL queries used by the application to store, retrieve or modify data.", "User-controllable input that is not properly validated by the application as part of SQL queries."], "summary": ["This attack exploits target software that constructs SQL statements based on user input. An attacker crafts input strings so that when the target software constructs SQL statements based on the input, the resulting SQL statement performs actions other than those the application intended.", "SQL Injection results from failure of the application to appropriately validate input. When specially crafted user-controlled input consisting of SQL syntax is used without proper validation as part of SQL queries, it is possible to glean information from the database in ways not envisaged during application design. Depending upon the database and the design of the application, it may also be possible to leverage injection to have the database execute system-related commands of the attackers' choice. SQL Injection enables an attacker to talk directly to the database, thus bypassing the application completely. Successful injection can cause information disclosure as well as ability to add or modify data in the database. In order to successfully inject SQL and retrieve information from a database, an attacker:"], "name": "SQL Injection"}, {"related_weakness": ["120", "134", "74", "20", "680", "697"], "solutions": ["The following code shows a vulnerable usage of Syslog():"], "id": "67", "prerequisites": ["The format string argument of the Syslog function can be tainted with user supplied data."], "summary": ["This attack targets the format string vulnerabilities in the syslog() function. An attacker would typically inject malicious input in the format string parameter of the syslog function. This is a common problem, and many public vulnerabilities and associated exploits have been posted."], "name": "String Format Overflow in syslog()"}, {"related_weakness": ["89", "209", "74", "20", "390", "697", "713", "707"], "solutions": ["Security by Obscurity is not a solution to preventing SQL Injection. Rather than suppress error messages and exceptions, the application must handle them gracefully, returning either a custom error page or redirecting the user to a default page, without revealing any information about the database or the application internals.", "Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as SQL content. Keywords such as UNION, SELECT or INSERT must be filtered in addition to characters such as a single-quote(') or SQL-comments (--) based on the context in which they appear."], "id": "7", "prerequisites": ["SQL queries used by the application to store, retrieve or modify data.", "User-controllable input that is not properly validated by the application as part of SQL queries."], "summary": ["Blind SQL Injection results from an insufficient mitigation for SQL Injection. Although suppressing database error messages are considered best practice, the suppression alone is not sufficient to prevent SQL Injection. Blind SQL Injection is a form of SQL Injection that overcomes the lack of error messages. Without the error messages that facilitate SQL Injection, the attacker constructs input strings that probe the target through simple Boolean SQL expressions. The attacker can determine if the syntax and structure of the injection was successful based on whether the query was executed or not. Applied iteratively, the attacker determines how and where the target is vulnerable to SQL Injection.", "For example, an attacker may try entering something like \"username' AND 1=1; --\" in an input field. If the result is the same as when the attacker entered \"username\" in the field, then the attacker knows that the application is vulnerable to SQL Injection. The attacker can then ask yes/no questions from the database server to extract information from it. For example, the attacker can extract table names from a database using the following types of queries:", "If the above query executes properly, then the attacker knows that the first character in a table name in the database is a letter between m and z. If it doesn't, then the attacker knows that the character must be between a and l (assuming of course that table names only contain alphabetic characters). By performing a binary search on all character positions, the attacker can determine all table names in the database. Subsequently, the attacker may execute an actual attack and send something like:"], "name": "Blind SQL Injection"}, {"related_weakness": ["176", "171", "179", "180", "173", "172", "184", "183", "74", "20", "697", "692"], "solutions": ["Ensure that the system is Unicode aware and can properly process Unicode data. Do not make an assumption that data will be in ASCII.", "Ensure that filtering or input validation is applied to canonical data.", "Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system."], "id": "71", "prerequisites": ["Filtering is performed on data that has not be properly canonicalized."], "summary": ["An attacker may provide a Unicode string to a system component that is not Unicode aware and use that to circumvent the filter or cause the classifying mechanism to fail to properly understanding the request. That may allow the attacker to slip malicious data past the content filter and/or possibly cause the application to route the request incorrectly."], "name": "Using Unicode Encoding to Bypass Validation Logic"}, {"related_weakness": ["173", "177", "171", "172", "73", "21", "74", "20"], "solutions": ["Refer to the RFCs to safely decode URL.", "Regular expression can be used to match safe URL patterns. However, that may discard valid URL requests if the regular expression is too restrictive.", "There are tools to scan HTTP requests to the server for valid URL such as URLScan from Microsoft (http://www.microsoft.com/technet/security/tools/urlscan.mspx).", "Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process.", "Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system. Test your decoding process against malicious input.", "Be aware of the threat of alternative method of data encoding and obfuscation technique such as IP address encoding. (See related guideline section)", "When client input is required from web-based forms, avoid using the \"GET\" method to submit data, as the method causes the form data to be appended to the URL and is easily manipulated. Instead, use the \"POST method whenever possible."], "id": "72", "prerequisites": ["The application should accepts and decodes URL input.", "The application performs insufficient filtering/canonicalization on the URLs."], "summary": ["This attack targets the encoding of the URL. An attacker can take advantage of the multiple way of encoding an URL and abuse the interpretation of the URL. An URL may contain special character that need special syntax handling in order to be interpreted. Special characters are represented using a percentage character followed by two digits representing the octet code of the original character (%HEX-CODE). For instance US-ASCII space character would be represented with %20. This is often referred as escaped ending or percent-encoding. Since the server decodes the URL from the requests, it may restrict the access to some URL paths by validating and filtering out the URL requests it received. An attacker will try to craft an URL with a sequence of special characters which once interpreted by the server will be equivalent to a forbidden URL. It can be difficult to protect against this attack since the URL can contain other format of encoding such as UTF-8 encoding, Unicode-encoding, etc. The attacker could also subvert the meaning of the URL string request by encoding the data being sent to the server through a GET request. For instance an attacker may subvert the meaning of parameters used in a SQL request and sent through the URL string (See Example section)."], "name": "URL Encoding"}, {"related_weakness": ["20", "184", "96", "348", "116", "350", "86", "697"], "solutions": ["Design: Use browser technologies that do not allow client side scripting.", "Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.", "Implementation: Perform input validation for all remote content.", "Implementation: Perform output validation for all remote content.", "Implementation: Disable scripting languages such as JavaScript in browser", "Implementation: Scan dynamically generated content against validation specification"], "id": "73", "prerequisites": ["The victim must trust the name and locale of user controlled filenames."], "summary": ["An attack of this type involves an attacker inserting malicious characters (such as a XSS redirection) into a filename, directly or indirectly that is then used by the target software to generate HTML text or other potentially executable content. Many websites rely on user-generated content and dynamically build resources like files, filenames, and URL links directly from user supplied data. In this attack pattern, the attacker uploads code that can execute in the client browser and/or redirect the client browser to a site that the attacker owns. All XSS attack payload variants can be used to pass and exploit these vulnerabilities."], "name": "User-Controlled Filename"}, {"related_weakness": ["180", "181", "173", "171", "172", "73", "21", "22", "74", "20", "697", "707"], "solutions": ["Verify that the user-supplied data does not use backslash character to escape malicious characters.", "Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system.", "Be aware of the threat of alternative method of data encoding.", "Regular expressions can be used to filter out backslash. Make sure you decode before filtering and validating the untrusted input data.", "In the case of path traversals, use the principle of least privilege when determining access rights to file systems. Do not allow users to access directories/files that they should not access.", "Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process.", "Avoid making decisions based on names of resources (e.g. files) if those resources can have alternate names."], "id": "78", "prerequisites": ["The application accepts the backlash character as escape character.", "The application server does incomplete input data decoding, filtering and validation."], "summary": ["This attack targets the use of the backslash in alternate encoding. An attacker can provide a backslash as a leading character and causes a parser to believe that the next character is special. This is called an escape. By using that trick, the attacker tries to exploit alternate ways to encode the same character which leads to filter problems and opens avenues to attack."], "name": "Using Escaped Slashes in Alternate Encoding"}, {"related_weakness": ["173", "171", "180", "181", "20", "74", "73", "21", "22", "185", "200", "697", "707"], "solutions": ["Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process. Refer to the RFCs to safely decode URL.", "When client input is required from web-based forms, avoid using the \"GET\" method to submit data, as the method causes the form data to be appended to the URL and is easily manipulated. Instead, use the \"POST method whenever possible.", "There are tools to scan HTTP requests to the server for valid URL such as URLScan from Microsoft (http://www.microsoft.com/technet/security/tools/urlscan.mspx)", "Be aware of the threat of alternative method of data encoding and obfuscation technique such as IP address encoding. (See related guideline section)", "Test your path decoding process against malicious input.", "In the case of path traversals, use the principle of least privilege when determining access rights to file systems. Do not allow users to access directories/files that they should not access.", "Assume all input is malicious. Create a white list that defines all valid input to the application based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system."], "id": "79", "prerequisites": ["The application server accepts paths to locate resources.", "The application server does insufficient input data validation on the resource path requested by the user.", "The access right to resources are not set properly."], "summary": ["This attack targets the encoding of the Slash characters. An attacker would try to exploit common filtering problems related to the use of the slashes characters to gain access to resources on the target host. Directory-driven systems, such as file systems and databases, typically use the slash character to indicate traversal between directories or other container components. For murky historical reasons, PCs (and, as a result, Microsoft OSs) choose to use a backslash, whereas the UNIX world typically makes use of the forward slash. The schizophrenic result is that many MS-based systems are required to understand both forms of the slash. This gives the attacker many opportunities to discover and abuse a number of common filtering problems. The goal of this pattern is to discover server software that only applies filters to one version, but not the other."], "name": "Using Slashes in Alternate Encoding"}, {"related_weakness": ["120", "119", "118", "74", "20", "680", "733", "697"], "solutions": ["Use a language or compiler that performs automatic bounds checking.", "Use secure functions not vulnerable to buffer overflow.", "If you have to use dangerous functions, make sure that you do boundary checking.", "Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.", "Use OS-level preventative functionality. Not a complete solution."], "id": "8", "prerequisites": ["The target host exposes an API to the user.", "One or more API functions exposed by the target host has a buffer overflow vulnerability."], "summary": ["This attack targets libraries or shared code modules which are vulnerable to buffer overflow attacks. An attacker who has access to an API may try to embed malicious code in the API function call and exploit a buffer overflow vulnerability in the function's implementation. All clients that make use of the code library thus become vulnerable by association. This has a very broad effect on security across a system, usually affecting more than one software process."], "name": "Buffer Overflow in an API Call"}, {"related_weakness": ["173", "172", "180", "181", "171", "73", "21", "74", "20", "697", "692"], "solutions": ["The Unicode Consortium recognized multiple representations to be a problem and has revised the Unicode Standard to make multiple representations of the same code point with UTF-8 illegal. The UTF-8 Corrigendum lists the newly restricted UTF-8 range (See references). Many current applications may not have been revised to follow this rule. Verify that your application conform to the latest UTF-8 encoding specification. Pay extra attention to the filtering of illegal characters.", "Another consideration is error recovery. To guarantee correct recovery after corrupt or lost bytes, decoders must be able to recognize the difference between lead and trail bytes, rather than just assuming that bytes will be of the type allowed in their position.", "For security reasons, a UTF-8 decoder must not accept UTF-8 sequences that are longer than necessary to encode a character. If you use a parser to decode the UTF-8 encoding, make sure that parser filter the invalid UTF-8 characters (invalid forms or overlong forms).", "Look for overlong UTF-8 sequences starting with malicious pattern. You can also use a UTF-8 decoder stress test to test your UTF-8 parser (See Markus Kuhn's UTF-8 and Unicode FAQ in reference section)", "Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system. Test your decoding process against malicious input."], "id": "80", "prerequisites": ["The application's UTF-8 decoder accepts and interprets illegal UTF-8 characters or non-shortest format of UTF-8 encoding.", "Input filtering and validating is not done properly leaving the door open to harmful characters for the target host."], "summary": ["This attack is a specific variation on leveraging alternate encodings to bypass validation logic. This attack leverages the possibility to encode potentially harmful input in UTF-8 and submit it to applications not expecting or effective at validating this encoding standard making input filtering difficult. UTF-8 (8-bit UCS/Unicode Transformation Format) is a variable-length character encoding for Unicode. Legal UTF-8 characters are one to four bytes long. However, early version of the UTF-8 specification got some entries wrong (in some cases it permitted overlong characters). UTF-8 encoders are supposed to use the \"shortest possible\" encoding, but naive decoders may accept encodings that are longer than necessary. According to the RFC 3629, a particularly subtle form of this attack can be carried out against a parser which performs security-critical validity checks against the UTF-8 encoded form of its input, but interprets certain illegal octet sequences as characters."], "name": "Using UTF-8 Encoding to Bypass Validation Logic"}, {"related_weakness": ["117", "93", "92", "221", "96", "20", "150", "276", "279", "116", "713"], "solutions": ["Design: Use input validation before writing to web log", "Design: Validate all log data before it is output"], "id": "81", "prerequisites": ["Target server software must be a HTTP server that performs web logging."], "summary": ["Web Logs Tampering attacks involve an attacker injecting, deleting or otherwise tampering with the contents of web logs typically for the purposes of masking other malicious behavior. Additionally, writing malicious data to log files may target jobs, filters, reports, and other agents that process the logs in an asynchronous attack pattern. This pattern of attack is similar to \"Log Injection-Tampering-Forging\" except that in this case, the attack is targeting the logs of the web server and not the application."], "name": "Web Logs Tampering"}, {"related_weakness": ["91", "74", "20", "390", "713", "707"], "solutions": ["Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as content that can be interpreted in the context of an XPath expression. Characters such as a single-quote(') or operators such as or (|), and (&) and such should be filtered if the application does not expect them in the context in which they appear. If such content cannot be filtered, it must at least be properly escaped to avoid them being interpreted as part of XPath expressions.", "Use of parameterized XPath queries - Parameterization causes the input to be restricted to certain domains, such as strings or integers, and any input outside such domains is considered invalid and the query fails.", "Use of custom error pages - Attackers can glean information about the nature of queries from descriptive error messages. Input validation must be coupled with customized error pages that inform about an error without disclosing information about the database or application."], "id": "83", "prerequisites": ["XPath queries used to retrieve information stored in XML documents", "User-controllable input not properly sanitized before being used as part of XPath queries"], "summary": ["An attacker can craft special user-controllable input consisting of XPath expressions to inject the XML database and bypass authentication or glean information that he normally would not be able to. XPath Injection enables an attacker to talk directly to the XML database, thus bypassing the application completely. XPath Injection results from the failure of an application to properly sanitize input used as part of dynamic XPath expressions used to query an XML database. In order to successfully inject XML and retrieve information from a database, an attacker:"], "name": "XPath Injection"}, {"related_weakness": ["79", "113", "348", "96", "20", "116", "184", "86", "712", "692"], "solutions": ["Design: Use browser technologies that do not allow client side scripting.", "Design: Utilize strict type, character, and encoding enforcement", "Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.", "Implementation: Perform input validation for all remote content.", "Implementation: Perform output validation for all remote content.", "Implementation: Disable scripting languages such as JavaScript in browser", "Implementation: Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser, web servers, and plug in technologies, staying current on patch release that deal with XSS countermeasures mitigates this."], "id": "85", "prerequisites": ["The user must allow JavaScript to execute in their browser"], "summary": ["This attack utilizes the frequent client-server roundtrips in Ajax conversation to scan a system. While Ajax does not open up new vulnerabilities per se, it does optimize them from an attacker point of view. In many XSS attacks the attacker must get a \"hole in one\" and successfully exploit the vulnerability on the victim side the first time, once the client is redirected the attacker has many chances to engage in follow on probes, but there is only one first chance. In a widely used web application this is not a major problem because 1 in a 1,000 is good enough in a widely used application.", "A common first step for an attacker is to footprint the environment to understand what attacks will work. Since footprinting relies on enumeration, the conversational pattern of rapid, multiple requests and responses that are typical in Ajax applications enable an attacker to look for many vulnerabilities, well-known ports, network locations and so on."], "name": "AJAX Fingerprinting"}, {"related_weakness": ["79", "184", "348", "96", "20", "116", "86", "692", "697", "713", "71"], "solutions": ["Design: Use browser technologies that do not allow client side scripting.", "Design: Utilize strict type, character, and encoding enforcement", "Design: Server side developers should not proxy content via XHR or other means, if a http proxy for remote content is setup on the server side, the client's browser has no way of discerning where the data is originating from.", "Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.", "Implementation: Perform input validation for all remote content.", "Implementation: Perform output validation for all remote content.", "Implementation: Disable scripting languages such as JavaScript in browser", "Implementation: Session tokens for specific host", "Implementation: Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser, web servers, and plug in technologies, staying current on patch release that deal with XSS countermeasures mitigates this."], "id": "86", "prerequisites": ["Target software must be a client that allows scripting communication from remote hosts, and attacker must control a remote site of some sort to redirect client and data to."], "summary": ["An attack of this type exploits web applications that generate web content, such as links in a HTML page, based on unvalidated or improperly validated data submitted by other actors. XSS in HTTP Headers attacks target the HTTP headers which are hidden from most users and may not be validated by web applications."], "name": "Embedding Script (XSS) in HTTP Headers"}, {"related_weakness": ["78", "88", "20", "697", "713"], "solutions": ["Use language APIs rather than relying on passing data to the operating system shell or command line. Doing so ensures that the available protection mechanisms in the language are intact and applicable.", "Filter all incoming data to escape or remove characters or strings that can be potentially misinterpreted as operating system or shell commands", "All application processes should be run with the minimal privileges required. Also, processes must shed privileges as soon as they no longer require them."], "id": "88", "prerequisites": ["User controllable input used as part of commands to the underlying operating system."], "summary": ["In this type of an attack, an adversary injects operating system commands into existing application functions. An application that uses untrusted input to build command strings is vulnerable. An adversary can leverage OS command injection in an application to elevate privileges, execute arbitrary commands and compromise the underlying operating system."], "name": "OS Command Injection"}, {"related_weakness": ["120", "118", "119", "74", "20", "680", "733", "697"], "solutions": ["Carefully review the service's implementation before making it available to user. For instance you can use manual or automated code review to uncover vulnerabilities such as buffer overflow.", "Use a language or compiler that performs automatic bounds checking.", "Use an abstraction library to abstract away risky APIs. Not a complete solution.", "Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.", "Operational: Use OS-level preventative functionality. Not a complete solution.", "Apply the latest patches to your user exposed services. This may not be a complete solution, especially against a zero day attack.", "Do not unnecessarily expose services."], "id": "9", "prerequisites": ["The target host exposes a command-line utility to the user.", "The command-line utility exposed by the target host has a buffer overflow vulnerability that can be exploited."], "summary": ["This attack targets command-line utilities available in a number of shells. An attacker can leverage a vulnerability found in a command-line utility to escalate privilege to root."], "name": "Buffer Overflow in Local Command-Line Utilities"}, {"related_weakness": ["82", "79", "74", "20", "692", "697", "713", "71"], "solutions": ["In addition to the traditional input fields, all other user controllable inputs, such as image tags within messages or the likes, must also be subjected to input validation. Such validation should ensure that content that can be potentially interpreted as script by the browser is appropriately filtered.", "All output displayed to clients must be properly escaped. Escaping ensures that the browser interprets special scripting characters literally and not as script to be executed."], "id": "91", "prerequisites": ["Application permitting the inclusion or use of IMG tags"], "summary": ["Image tags are an often overlooked, but convenient, means for a Cross Site Scripting attack. The attacker can inject script contents into an image (IMG) tag in order to steal information from a victim's browser and execute malicious scripts."], "name": "XSS in IMG Tags"}, {"related_weakness": ["112", "20", "19", "674", "770"], "solutions": ["Carefully validate and sanitize all user-controllable data prior to passing it to the XML parser routine. Ensure that the resultant data is safe to pass to the XML parser.", "Perform validation on canonical data.", "Pick a robust implementation of an XML parser.", "Validate XML against a valid schema or DTD prior to parsing."], "id": "99", "prerequisites": ["An application uses an XML parser to perform transformation on user-controllable data.", "An application does not perform sufficient validation to ensure that user-controllable data is safe for an XML parser."], "summary": ["Applications often need to transform data in and out of the XML format by using an XML parser. It may be possible for an attacker to inject data that may have an adverse effect on the XML parser when it is being processed. These adverse effects may include the parser crashing, consuming too much of a resource, executing too slowly, executing code supplied by an attacker, allowing usage of unintended system functionality, etc. An attacker's goal is to leverage parser failure to his or her advantage. In some cases it may be possible to jump from the data plane to the control plane via bad data being passed to an XML parser. [R.99.1]"], "name": "XML Parser Attack"}, {"related_weakness": ["120", "302", "118", "119", "74", "99", "20", "680", "733", "697"], "solutions": ["Do not expose environment variable to the user.", "Do not use untrusted data in your environment variables.", "Use a language or compiler that performs automatic bounds checking", "There are tools such as Sharefuzz [R.10.3] which is an environment variable fuzzer for Unix that support loading a shared library. You can use Sharefuzz to determine if you are exposing an environment variable vulnerable to buffer overflow."], "id": "10", "prerequisites": ["The application uses environment variables.", "An environment variable exposed to the user is vulnerable to a buffer overflow.", "The vulnerable environment variable uses untrusted data.", "Tainted data used in the environment variables is not properly validated. For instance boundary checking is not done before copying the input data to a buffer."], "summary": ["This attack pattern involves causing a buffer overflow through manipulation of environment variables. Once the attacker finds that they can modify an environment variable, they may try to overflow associated buffers. This attack leverages implicit trust often placed in environment variables."], "name": "Buffer Overflow via Environment Variables"}, {"related_weakness": ["353", "285", "302", "74", "15", "73", "20", "200"], "solutions": ["Protect environment variables against unauthorized read and write access.", "Protect the configuration files which contain environment variables against illegitimate read and write access.", "Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system.", "Apply the least privilege principles. If a process has no legitimate reason to read an environment variable do not give that privilege."], "id": "13", "prerequisites": ["An environment variable is accessible to the user.", "An environment variable used by the application can be tainted with user supplied data.", "Input data used in an environment variable is not validated properly.", "The variables encapsulation is not done properly. For instance setting a variable as public in a class makes it visible and an attacker may attempt to manipulate that variable."], "summary": ["The attacker directly or indirectly modifies environment variables used by or controlling the target software. The attacker's goal is to cause the target software to deviate from its expected operation in a manner that benefits the attacker."], "name": "Subverting Environment Variable Values"}, {"related_weakness": ["134", "20", "74", "133"], "solutions": ["Limit the usage of formatting string functions.", "Strong input validation - All user-controllable input must be validated and filtered for illegal formatting characters."], "id": "135", "prerequisites": ["The target application must accept a strings as user input, fail to sanitize string formatting characters in the user input, and process this string using functions that interpret string formatting characters."], "summary": ["An attacker includes formatting characters in a string input field on the target application. Most applications assume that users will provide static text and may respond unpredictably to the presence of formatting character. For example, in certain functions of the C programming languages such as printf, the formatting character %s will print the contents of a memory location expecting this location to identify a string and the formatting character %n prints the number of DWORD written in the memory. An attacker can use this to read or write to memory locations or files, or simply to manipulate the value of the resulting text in unexpected ways. Reading or writing memory may result in program crashes and writing memory could result in the execution of arbitrary code if the attacker can write to the program stack."], "name": "Format String Injection"}, {"related_weakness": ["77", "90", "20"], "solutions": ["Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as LDAP content.", "Use of custom error pages - Attackers can glean information about the nature of queries from descriptive error messages. Input validation must be coupled with customized error pages that inform about an error without disclosing information about the LDAP or application."], "id": "136", "prerequisites": ["The target application must accept a string as user input, fail to sanitize characters that have a special meaning in LDAP queries in the user input, and insert the user-supplied string in an LDAP query which is then processed."], "summary": ["An attacker manipulates or crafts an LDAP query for the purpose of undermining the security of the target. Some applications use user input to create LDAP queries that are processed by an LDAP server. For example, a user might provide their username during authentication and the username might be inserted in an LDAP query during the authentication process. An attacker could use this input to inject additional commands into an LDAP query that could disclose sensitive information. For example, entering a * in the aforementioned query might return information about all users on the system. This attack is very similar to an SQL injection attack in that it manipulates a query to gather additional information or coerce a particular return value."], "name": "LDAP Injection"}, {"related_weakness": ["22", "20"], "solutions": ["Design: Input validation. Assume that user inputs are malicious. Utilize strict type, character, and encoding enforcement", "Implementation: Perform input validation for all remote content, including remote and user-generated content.", "Implementation: Validate user input by only accepting known good. Ensure all content that is delivered to client is sanitized against an acceptable content specification -- whitelisting approach.", "Implementation: Prefer working without user input when using file system calls", "Implementation: Use indirect references rather than actual file names.", "Implementation: Use possible permissions on file access when developing and deploying web applications."], "id": "139", "prerequisites": ["The target application must accept a string as user input, fail to sanitize combinations of characters in the input that have a special meaning in the context of path navigation, and insert the user-supplied string into path navigation commands."], "summary": ["An attacker exploits a weakness in input validation on the target by supplying a specially constructed path utilizing dot and slash characters for the purpose of obtaining access to arbitrary files or resources. An attacker modifies a known path on the target in order to reach material that is not available through intended channels. These attacks normally involve adding additional path separators (/ or \\) and/or dots (.), or encodings thereof, in various combinations in order to reach parent directories or entirely separate trees of the target's directory structure."], "name": "Relative Path Traversal"}, {"related_weakness": ["120", "353", "118", "119", "74", "20", "680", "697", "713"], "solutions": ["The client software should not install untrusted code from a non-authenticated server.", "The client software should have the latest patches and should be audited for vulnerabilities before being used to communicate with potentially hostile servers.", "Perform input validation for length of buffer inputs.", "Use a language or compiler that performs automatic bounds checking.", "Use an abstraction library to abstract away risky APIs. Not a complete solution.", "Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.", "Ensure all buffer uses are consistently bounds-checked.", "Use OS-level preventative functionality. Not a complete solution."], "id": "14", "prerequisites": ["The targeted client software communicates with an external server.", "The targeted client software has a buffer overflow vulnerability."], "summary": ["This type of attack exploits a buffer overflow vulnerability in targeted client software through injection of malicious content from a custom-built hostile service."], "name": "Client-side Injection-induced Buffer Overflow"}, {"related_weakness": ["471", "20"], "solutions": ["Design: Range, size and value and consistency verification for any arguments supplied to application from external sources and devise appropriate error response.", "Design: Ensure that variables that should not be manipulated by a user are not accessible to them."], "id": "171", "prerequisites": ["The targeted application must rely on external variables (e.g. environment variables) or user-controlled variables (e.g. call parameters) in such a way that malicious manipulation of them can subvert functionality."], "summary": ["An attacker manipulates variables used by an application to perform a variety of possible attacks. This can either be performed through the manipulation of function call parameters or by manipulating external variables, such as environment variables, that are used by an application. Changing variable values is usually undertaken as part of another attack; for example, a path traversal (inserting relative path modifiers) or buffer overflow (enlarging a variable value beyond an application's ability to store it)."], "name": "Variable Manipulation"}, {"related_weakness": ["97", "74", "20", "713"], "solutions": ["Set the OPTIONS IncludesNOEXEC in the global access.conf file or local .htaccess (Apache) file to deny SSI execution in directories that do not need them", "All user controllable input must be appropriately sanitized before use in the application. This includes omitting, or encoding, certain characters or strings that have the potential of being interpreted as part of an SSI directive", "Server Side Includes must be enabled only if there is a strong business reason to do so. Every additional component enabled on the web server increases the attack surface as well as administrative overhead"], "id": "101", "prerequisites": ["A web server that supports server side includes and has them enabled", "User controllable input that can carry include directives to the web server"], "summary": ["An attacker can use Server Side Include (SSI) Injection to send code to a web application that then gets executed by the web server. Doing so enables the attacker to achieve similar results to Cross Site Scripting, viz., arbitrary code execution and information disclosure, albeit on a more limited scale, since the SSI directives are nowhere near as powerful as a full-fledged scripting language. Nonetheless, the attacker can conveniently gain access to sensitive files, such as password files, and execute shell commands."], "name": "Server Side Include (SSI) Injection"}, {"related_weakness": ["250", "638", "285", "116", "20"], "solutions": ["Disable script execution.", "Ensure that sufficient input validation is performed for any potentially untrusted data before it is used in any privileged context or zone", "Limit the flow of untrusted data into the privileged areas of the system that run in the higher trust zone", "Limit the sites that are being added to the local machine zone and restrict the privileges of the code running in that zone to the bare minimum", "Ensure proper HTML output encoding before writing user supplied data to the page"], "id": "104", "prerequisites": ["The target must be using a zone-aware browser."], "summary": ["An attacker is able to cause a victim to load content into their web-browser that bypasses security zone controls and gain access to increased privileges to execute scripting code or other web objects such as unsigned ActiveX controls or applets. This is a privilege elevation attack targeted at zone-based web-browser security. In a zone-based model, pages belong to one of a set of zones corresponding to the level of privilege assigned to that page. Pages in an untrusted zone would have a lesser level of access to the system and/or be restricted in the types of executable content it was allowed to invoke. In a cross-zone scripting attack, a page that should be assigned to a less privileged zone is granted the privileges of a more trusted zone. This can be accomplished by exploiting bugs in the browser, exploiting incorrect configuration in the zone controls, through a cross-site scripting attack that causes the attackers' content to be treated as coming from a more trusted page, or by leveraging some piece of system functionality that is accessible from both the trusted and less trusted zone. This attack differs from \"Restful Privilege Escalation\" in that the latter correlates to the inadequate securing of RESTful access methods (such as HTTP DELETE) on the server, while cross-zone scripting attacks the concept of security zones as implemented by a browser."], "name": "Cross Zone Scripting"}, {"related_weakness": ["79", "117", "74", "20"], "solutions": ["Cleanse all user supplied data before placing it in the logs. Reject all bad data. Ensure that the data is in the expected form.", "Use proper HTML output encoding techniques to strip the log data of potentially dangerous scripting characters before displaying it in the administrative console", "If possible, disable script execution in the administrative interface."], "id": "106", "prerequisites": ["The system uses a web based interface", "The system does not cleanse / validate user supplied data before writing it to logs", "Information from logs is displayed in a web based interface", "The web based log interface does not HTML output encode the log data prior to displaying it in the administrator console."], "summary": ["An attacker may leverage a system weakness where logs are susceptible to log injection to insert scripts into the system's logs. If these logs are later viewed by an administrator through a thin administrative interface and the log data is not properly HTML encoded before being written to the page, the attackers' scripts stored in the log will be executed in the administrative interface with potentially serious consequences. This attack pattern is really a combination of two other attack patterns: log injection and stored cross site scripting."], "name": "Cross Site Scripting through Log Files"}, {"related_weakness": ["89", "74", "20", "78", "114"], "solutions": ["Disable MSSQL xp_cmdshell directive on the database", "Properly validate the data (syntactically and semantically) before writing it to the database.", "Do not implicitly trust the data stored in the database. Re-validate it prior to usage to make sure that it is safe to use in a given context (e.g. as a command line argument)."], "id": "108", "prerequisites": ["The application does not properly validate data before storing in the database", "Backend application implicitly trusts the data stored in the database", "Malicious data is used on the backend as a command line argument"], "summary": ["An attacker uses standard SQL injection methods to inject data into the command line for execution. This could be done directly through misuse of directives such as MSSQL_xp_cmdshell or indirectly through injection of data into the database that would be interpreted as shell commands. Sometime later, an unscrupulous backend application (or could be part of the functionality of the same application) fetches the injected data stored in the database and uses this data as command line arguments without performing proper validation. The malicious data escapes that data plane by spawning new commands to be executed on the host."], "name": "Command Line Execution through SQL Injection"}, {"related_weakness": ["20", "100", "89", "564"], "solutions": ["Remember to understand how to use the data access methods generated by the ORM tool / framework properly in a way that would leverage the built-in security mechanisms of the framework", "Ensure to keep up to date with security relevant updates to the persistence framework used within your application."], "id": "109", "prerequisites": ["An application uses data access layer generated by an ORM tool or framework", "An application uses user supplied data in queries executed against the database", "The separation between data plane and control plane is not ensured, through either developer error or an underlying weakness in the data access layer code generation framework"], "summary": ["An attacker leverages a weakness present in the database access layer code generated with an Object Relational Mapping (ORM) tool or a weakness in the way that a developer used a persistence framework to inject his or her own SQL commands to be executed against the underlying database. The attack here is similar to plain SQL injection, except that the application does not use JDBC to directly talk to the database, but instead it uses a data access layer generated by an ORM tool or framework (e.g. Hibernate). While most of the time code generated by an ORM tool contains safe access methods that are immune to SQL injection, sometimes either due to some weakness in the generated code or due to the fact that the developer failed to use the generated access methods properly, SQL injection is still possible."], "name": "Object Relational Mapping Injection"}, {"related_weakness": ["89", "20"], "solutions": ["Properly validate and sanitize/reject user input at the service provider.", "Ensure that prepared statements or other mechanism that enables parameter binding is used when accessing the database in a way that would prevent the attackers' supplied data from controlling the structure of the executed query.", "At the database level, ensure that the database user used by the application in a particular context has the minimum needed privileges to the database that are needed to perform the operation. When possible, run queries against pre-generated views rather than the tables directly."], "id": "110", "prerequisites": ["SOAP messages are used as a communication mechanism in the system", "SOAP parameters are not properly validated at the service provider", "The service provider does not properly utilize parameter binding when building SQL queries"], "summary": ["An attacker modifies the parameters of the SOAP message that is sent from the service consumer to the service provider to initiate a SQL injection attack. On the service provider side, the SOAP message is parsed and parameters are not properly validated before being used to access a database in a way that does not use parameter binding, thus enabling the attacker to control the structure of the executed SQL query. This pattern describes a SQL injection attack with the delivery mechanism being a SOAP message."], "name": "SQL Injection through SOAP Parameter Tampering"}], "id": "CVE-2016-4957", "Published": "2016-07-04T21:59:04.283-04:00", "references": ["http://bugs.ntp.org/3046", "http://lists.opensuse.org/opensuse-security-announce/2016-06/msg00018.html", "http://lists.opensuse.org/opensuse-security-announce/2016-06/msg00023.html", "http://lists.opensuse.org/opensuse-security-announce/2016-06/msg00024.html", "http://lists.opensuse.org/opensuse-security-announce/2016-06/msg00028.html", "http://lists.opensuse.org/opensuse-security-announce/2016-06/msg00040.html", "http://support.ntp.org/bin/view/Main/NtpBug3046", "http://support.ntp.org/bin/view/Main/SecurityNotice", "http://www.kb.cert.org/vuls/id/321640", "http://www.oracle.com/technetwork/topics/security/bulletinapr2016-2952098.html"], "map_cve_scip": {"sciplink": "http://www.scip.ch/en/?vuldb.87754", "scipid": "87754"}, "summary": "ntpd in NTP before 4.2.8p8 allows remote attackers to cause a denial of service (daemon crash) via a crypto-NAK packet.  NOTE: this vulnerability exists because of an incorrect fix for CVE-2016-1547.", "last-modified": "2016-10-05T11:25:03.573-04:00"}