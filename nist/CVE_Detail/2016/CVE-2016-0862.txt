{"Modified": "2016-02-05T06:59:02.127-05:00", "vulnerable_configuration": [{"title": "cpe:2.3:o:ge:snmp_web_adapter_firmware:4.7", "id": "cpe:2.3:o:ge:snmp_web_adapter_firmware:4.7"}, {"title": "cpe:2.3:h:ge:snmp%5c%2fweb_adapter_1024747", "id": "cpe:2.3:h:ge:snmp%5c%2fweb_adapter_1024747"}, {"title": "cpe:2.3:h:ge:snmp%5c%2fweb_adapter_1024746", "id": "cpe:2.3:h:ge:snmp%5c%2fweb_adapter_1024746"}, {"title": "cpe:2.3:h:ge:snmp%5c%2fweb_adapter_1024748", "id": "cpe:2.3:h:ge:snmp%5c%2fweb_adapter_1024748"}, {"title": "cpe:2.3:h:ge:snmp%5c%2fweb_adapter_1024921", "id": "cpe:2.3:h:ge:snmp%5c%2fweb_adapter_1024921"}], "vulnerable_configuration_cpe_2_2": ["cpe:/o:ge:snmp_web_adapter_firmware:4.7", "cpe:/h:ge:snmp%5c%2fweb_adapter_1024747", "cpe:/h:ge:snmp%5c%2fweb_adapter_1024746", "cpe:/h:ge:snmp%5c%2fweb_adapter_1024748", "cpe:/h:ge:snmp%5c%2fweb_adapter_1024921"], "last-modified": "2016-12-05T22:05:54.787-05:00", "map_cve_openvas": {"openvas_script_file": "gb_ge_snmp_web_interface_mult_vuln.nasl", "openvas_script_family": "Web application abuses", "openvas_script_id": "880843", "openvas_script_name": "GE SNMP/Web Interface Multiple Vulnerabilities"}, "references": ["http://apps.geindustrial.com/publibrary/checkout/Application%20and%20Technical%7CGEIS_SNMP%7CPDF&filename=GEIS_SNMP.pdf", "http://packetstormsecurity.com/files/135586/GE-Industrial-Solutions-UPS-SNMP-Adapter-Command-Injection.html", "http://seclists.org/fulldisclosure/2016/Feb/21", "https://ics-cert.us-cert.gov/advisories/ICSA-16-033-02"], "ranking": [[{"circl": 2}]], "cwe": "CWE-200", "cvss": "4.0", "capec": [{"related_weakness": ["290", "287", "20", "200", "693"], "solutions": ["Design: Ensure that client process and/or message is authenticated so that anonymous communications and/or messages are not accepted by the system.", "Design: Do not rely on client validation or encoding for security purposes.", "Design: Utilize digital signatures to increase authentication assurance.", "Design: Utilize two factor authentication to increase authentication assurance.", "Implementation: Perform input validation for all remote content."], "id": "22", "prerequisites": ["Server software must rely on client side formatted and validated values, and not reinforce these checks on the server side."], "summary": ["An attack of this type exploits a programs' vulnerabilities in client/server communication channel authentication and data integrity. It leverages the implicit trust a server places in the client, or more importantly, that which the server believes is the client.", "An attacker executes this type of attack by placing themselves in the communication channel between client and server such that communication directly to the server is possible where the server believes it is communicating only with a valid client.", "There are numerous variations of this type of attack."], "name": "Exploiting Trust in Client (aka Make the Client Invisible)"}, {"related_weakness": ["200"], "solutions": ["Configuration: Disable Java Script in the browser"], "id": "472", "prerequisites": ["Java Script is not disabled in the victim's browser"], "summary": ["An attacker carefully crafts small snippets of Java Script to efficiently detect the type of browser the potential victim is using. Many web-based attacks need prior knowledge of the web browser including the version of browser to ensure successful exploitation of a vulnerability. Having this knowledge allows an attacker to target the victim with attacks that specifically exploit known or zero day weaknesses in the type and version of the browser used by the victim. Automating this process via Java Script as a part of the same delivery system used to exploit the browser is considered more efficient as the attacker can supply a browser fingerprinting method and integrate it with exploit code, all contained in Java Script and in response to the same web page request by the browser."], "name": "Browser Fingerprinting"}, {"related_weakness": ["290", "330", "331", "346", "488", "539", "200", "6", "285", "384", "693", "719"], "solutions": ["Use a strong source of randomness to generate a session ID.", "Use adequate length session IDs", "Do not use information available to the user in order to generate session ID (e.g., time).", "Ideas for creating random numbers are offered by Eastlake [RFC1750]", "Encrypt the session ID if you expose it to the user. For instance session ID can be stored in a cookie in encrypted format."], "id": "59", "prerequisites": ["The target host uses session IDs to keep track of the users.", "Session IDs are used to control access to resources.", "The session IDs used by the target host are predictable. For example, the session IDs are generated using predictable information (e.g., time)."], "summary": ["This attack targets predictable session ID in order to gain privileges. The attacker can predict the session ID used during a transaction to perform spoofing and session hijacking."], "name": "Session Credential Falsification through Prediction"}, {"related_weakness": ["294", "290", "346", "384", "488", "539", "200", "285", "664", "732"], "solutions": ["Always invalidate a session ID after the user logout.", "Setup a session time out for the session IDs.", "Protect the communication between the client and server. For instance it is best practice to use SSL to mitigate man in the middle attack.", "Do not code send session ID with GET method, otherwise the session ID will be copied to the URL. In general avoid writing session IDs in the URLs. URLs can get logged in log files, which are vulnerable to an attacker.", "Encrypt the session data associated with the session ID.", "Use multifactor authentication."], "id": "60", "prerequisites": ["The target host uses session IDs to keep track of the users.", "Session IDs are used to control access to resources.", "The session IDs used by the target host are not well protected from session theft."], "summary": ["This attack targets the reuse of valid session ID to spoof the target system in order to gain privileges. The attacker tries to reuse a stolen session ID used previously during a transaction to perform spoofing and session hijacking. Another name for this type of attack is Session Replay."], "name": "Reusing Session IDs (aka Session Replay)"}, {"related_weakness": ["173", "171", "180", "181", "20", "74", "73", "21", "22", "185", "200", "697", "707"], "solutions": ["Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process. Refer to the RFCs to safely decode URL.", "When client input is required from web-based forms, avoid using the \"GET\" method to submit data, as the method causes the form data to be appended to the URL and is easily manipulated. Instead, use the \"POST method whenever possible.", "There are tools to scan HTTP requests to the server for valid URL such as URLScan from Microsoft (http://www.microsoft.com/technet/security/tools/urlscan.mspx)", "Be aware of the threat of alternative method of data encoding and obfuscation technique such as IP address encoding. (See related guideline section)", "Test your path decoding process against malicious input.", "In the case of path traversals, use the principle of least privilege when determining access rights to file systems. Do not allow users to access directories/files that they should not access.", "Assume all input is malicious. Create a white list that defines all valid input to the application based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system."], "id": "79", "prerequisites": ["The application server accepts paths to locate resources.", "The application server does insufficient input data validation on the resource path requested by the user.", "The access right to resources are not set properly."], "summary": ["This attack targets the encoding of the Slash characters. An attacker would try to exploit common filtering problems related to the use of the slashes characters to gain access to resources on the target host. Directory-driven systems, such as file systems and databases, typically use the slash character to indicate traversal between directories or other container components. For murky historical reasons, PCs (and, as a result, Microsoft OSs) choose to use a backslash, whereas the UNIX world typically makes use of the forward slash. The schizophrenic result is that many MS-based systems are required to understand both forms of the slash. This gives the attacker many opportunities to discover and abuse a number of common filtering problems. The goal of this pattern is to discover server software that only applies filters to one version, but not the other."], "name": "Using Slashes in Alternate Encoding"}, {"related_weakness": ["353", "285", "302", "74", "15", "73", "20", "200"], "solutions": ["Protect environment variables against unauthorized read and write access.", "Protect the configuration files which contain environment variables against illegitimate read and write access.", "Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system.", "Apply the least privilege principles. If a process has no legitimate reason to read an environment variable do not give that privilege."], "id": "13", "prerequisites": ["An environment variable is accessible to the user.", "An environment variable used by the application can be tainted with user supplied data.", "Input data used in an environment variable is not validated properly.", "The variables encapsulation is not done properly. For instance setting a variable as public in a class makes it visible and an attacker may attempt to manipulate that variable."], "summary": ["The attacker directly or indirectly modifies environment variables used by or controlling the target software. The attacker's goal is to cause the target software to deviate from its expected operation in a manner that benefits the attacker."], "name": "Subverting Environment Variable Values"}, {"related_weakness": ["497", "200", "202", "538", "311", "312", "319", "276"], "solutions": ["Configuration: Keep patches up to date by installing weekly or daily if possible.", "Configuration: Shut down unnecessary services/ports.", "Policy: Change default passwords by choosing strong passwords.", "Implementation: Curtail unexpected input.", "Design: Encrypt and password-protect sensitive data.", "Policy: Place offline any information that has the potential to identify and compromise your organization's security such as access to business plans, formulas, and proprietary documents."], "id": "169", "prerequisites": ["None. Any system or network that can be detected can be footprinted. However, some configuration choices may limit the useful information that can be collected during a footprinting attack."], "summary": ["An attacker engages in probing and exploration activity to identify constituents and properties of the target. Footprinting is a general term to describe a variety of information gathering techniques, often used by attackers in preparation for some attack. It consists of using tools to learn as much as possible about the composition, configuration, and security mechanisms of the targeted application, system or network. Information that might be collected during a footprinting effort could include open ports, applications and their versions, network topology, and similar information. While footprinting is not intended to be damaging (although certain activities, such as network scans, can sometimes cause disruptions to vulnerable applications inadvertently) it may often pave the way for more damaging attacks."], "name": "Footprinting"}], "id": "CVE-2016-0862", "Published": "2016-02-05T06:59:01.173-05:00", "map_cve_scip": {"sciplink": "http://www.scip.ch/en/?vuldb.80807", "scipid": "80807"}, "map_cve_exploitdb": {"exploitdbid": "39408", "exploitdbscript": "platforms/hardware/webapps/39408.txt"}, "summary": "General Electric (GE) Industrial Solutions UPS SNMP/Web Adapter devices with firmware before 4.8 allow remote authenticated users to obtain sensitive cleartext account information via unspecified vectors."}